1
00:00:00,000 --> 00:00:05,013
В цьому відео я збираюся описати деякі відносно прості моделі нейронів

2
00:00:05,013 --> 00:00:10,081
Я буду описувати декілька різних моделей починаючи з простої лінійної і порогового

3
00:00:10,081 --> 00:00:14,088
нейронів і потім, описшу трохи більш складні моделі.

4
00:00:14,088 --> 00:00:20,028
Ці значно простіші ніж справжні нейрони, але вони досі достатньо складні, щоб

5
00:00:20,028 --> 00:00:25,035
дозволити нам створювати нейронні мережі, що роблять дуже цікаві види машинного

6
00:00:25,035 --> 00:00:28,083
навчання. В порядку розуміння будь-чого

7
00:00:28,083 --> 00:00:34,050
складного, ми повинні ідеалізувати його. Саме так, ми повинні зробити спрощення,

8
00:00:34,050 --> 00:00:38,036
що дозволять нам мати розуміння того як воно могло б працювати.

9
00:00:38,036 --> 00:00:44,025
З атомами, наприклад, ми спрощуємо їх тим, що вини ведуть себе як маленька сонячна система

10
00:00:45,015 --> 00:00:49,019
Ідеалізація відкидає складні деталі, що не є суттєвими для

11
00:00:49,019 --> 00:00:54,010
розуміння головних принципів. Вона дозволяє нам використати математику для

12
00:00:54,010 --> 00:00:58,096
створення аналогів до інших відомих систем. І як тільки ми зрозуміємо основні

13
00:00:58,096 --> 00:01:03,088
принципи, це легко  - додати складності і зробити модель більш реалістичною

14
00:01:03,088 --> 00:01:07,003
звичайно, ми повинні бути обережними коли ми

15
00:01:07,003 --> 00:01:11,055
ідеалізуємо щось, не відкидаючи речі, які дають його головні

16
00:01:11,055 --> 00:01:15,060
властивості. Це часто додає зрозумілості моделям, які

17
00:01:15,060 --> 00:01:19,035
завідомо направильні, але ми повинні не забувати, що вони неправильні

18
00:01:19,035 --> 00:01:24,000
Наприклад, багато робіт по нейронних мережах використовує нейрони, що спілкуються

19
00:01:24,000 --> 00:01:28,083
дробними числами, замість дискретних імпульсів активності, і ми знаємо, що нейрони кори

20
00:01:28,083 --> 00:01:33,060
ведуть себе не так, але це досі більш зрозумілі системи і

21
00:01:33,060 --> 00:01:37,000
на практиці вони можуть бути корисні для машинного навчання.

22
00:01:37,095 --> 00:01:42,081
перший тип нейрону, про який я хочу розказати, це найпростіший, лінійний

23
00:01:42,081 --> 00:01:44,055
нейрон. Це просто

24
00:01:44,055 --> 00:01:47,089
Він обчислювально обмежений в тому, що він може робити

25
00:01:47,089 --> 00:01:52,030
Він може дозволити нам отримати розуміння більш складних нейронів

26
00:01:52,052 --> 00:01:59,085
Але він може ввестив оману. Так, в лінійному нейроні, вихід це Y.

27
00:02:00,018 --> 00:02:05,067
Це функція суми зсуву(константи b) і суми всіх вхідних

28
00:02:05,067 --> 00:02:11,075
зв'язків активності на вхідній лінії помножена на ваги на цих лініях, що

29
00:02:11,075 --> 00:02:17,069
є синаптичними вагами на вході і якщо ви намалюєте криву, тоді

30
00:02:17,069 --> 00:02:23,062
на осі Х, зсув(b) плюс зважені активності на вхідній лінії

31
00:02:23,062 --> 00:02:26,081
ми отримаємо пряму що проходить через нуль.

32
00:02:30,069 --> 00:02:34,086
Дуже відрізняється від лінійного нейрону бінарний пороговий нейрон, що був

33
00:02:34,086 --> 00:02:39,014
представлений Мак-Каллоком  і Пітсом. Вони насправді були натхненні Вон Ройманом, коли

34
00:02:39,014 --> 00:02:42,036
той думав про те, як створити універсальний комп'ютер

35
00:02:43,090 --> 00:02:49,096
В бінарному пороговому нейроні ви спочатку розраховуєте зважену сумму входів і

36
00:02:49,096 --> 00:02:56,009
потім ви посилаєте імпульс активності якщо ця зважена сума перевищть порог

37
00:02:56,069 --> 00:03:01,040
Мак-Каллок і Піт думали, що імпульси були лише правдивими

38
00:03:01,040 --> 00:03:04,057
значеннями з предикатів.  Так, кожен нейрон комбінуючи правдиві значення

39
00:03:04,057 --> 00:03:09,003
які отримані від інших нейронів для того щоб продукувати власні правдиві значення.

40
00:03:09,003 --> 00:03:13,062
І це як комбінуваня деяких предикатів для того щоб обчислити правдиве значення

41
00:03:13,062 --> 00:03:17,078
іншого предикату. В цей час в 1940 роках логіка була

42
00:03:17,078 --> 00:03:24,006
головною парадігмою стосовно того, як мозок повинен працювати. З тих пір люди що думали про те як

43
00:03:24,006 --> 00:03:29,039
мозок працює, стали більше цікавитися ідеєю того, що мозок

44
00:03:29,039 --> 00:03:33,069
комбінуючи багато різних джерел ненадійних доказів

45
00:03:33,069 --> 00:03:38,052
І так логіка це не така добра парадігма для того що мозок робить.

46
00:03:39,043 --> 00:03:44,041
Для двійкового порогового нейрону, ви можете думати про його вхідну/вихідну функцію як

47
00:03:44,041 --> 00:03:48,070
про зважений вхід що вище порогу дає вихідне значення для нього.

48
00:03:48,070 --> 00:03:55,022
В іншому разі, ві дає результат нуль. Це насправді два еквівалентні шляхи

49
00:03:55,022 --> 00:03:57,097
написати рівняння для бінарного порогового нейрону.

50
00:03:58,024 --> 00:04:04,087
Ми можемо сказати, що сумарний вхід Z це просто активність на вході помножена на

51
00:04:04,087 --> 00:04:09,024
ваги. І потім вихід Y це один з Z

52
00:04:09,024 --> 00:04:15,031
що вище порогу, або нуль в іншому випадку. Альтернатвно, ми можемо сказати, що загальний

53
00:04:15,031 --> 00:04:20,018
вхід включає поняття зсуву. Так, загальний вхід що приходить в

54
00:04:20,018 --> 00:04:23,066
вхідні лінії помножений на ваги плюз константа(b)

55
00:04:23,066 --> 00:04:29,063
І тоді ми зможемо сказати, що вихід одиниця якщо загальна сумма входів більша нуля і нуль

56
00:04:29,063 --> 00:04:33,004
в іншому випадку. І еквівалентність проста, тому що

57
00:04:33,004 --> 00:04:38,074
порог в першому формулюванні дорівнює негативному зсуву в другому

58
00:04:38,074 --> 00:04:44,049
формулюванні. Вид нейронів що комбінує

59
00:04:44,049 --> 00:04:49,033
властивості обох лінійних і бінарного порогового нейрону це пороговий(випрямлений)

60
00:04:49,033 --> 00:04:54,051
лінійний нейрон. Він спочатку розраховує лінійну зважену сумму

61
00:04:54,051 --> 00:04:59,025
його входів, а потім дає на виході таку нелінійну функцію

62
00:04:59,025 --> 00:05:04,042
цієї зваженої суми. Так ми обчислюємо Z так само як  іраныше.

63
00:05:05,010 --> 00:05:08,054
Якщо Z менше нуля, ми даємо вихід нуль.

64
00:05:08,054 --> 00:05:12,006
В іншому випадку ми даємо результат, що дорівнює Z

65
00:05:12,006 --> 00:05:16,073
Так, більше нуля  - це лінійний, и це нуль. Це родить вибір важким.

66
00:05:16,073 --> 00:05:23,016
Таким чином графік входу-виходу виглядає так. Це точно нелінійна (функція),  але вище нуля

67
00:05:23,016 --> 00:05:27,022
вона лінійна. Тож, з нейроном ек цей, ми можемо отримати

68
00:05:27,022 --> 00:05:32,027
велику кількість приємних властивостей лінійних систем коли він більше нуля

69
00:05:32,027 --> 00:05:36,063
Ми також можемо дати можливість приймати рішення в нулі

70
00:05:40,036 --> 00:05:45,032
Нейрони які ми будемо часто використовувати в цьому курсі і можливо найпоширеніший

71
00:05:45,032 --> 00:05:50,016
вид нейронів, що використовується в штучних нейронних мережах це сигмоїдні нейрони

72
00:05:50,016 --> 00:05:55,044
Вони дають дробові значення виходу, які є гладкою і обмеженою функцією їх сумарного

73
00:05:55,044 --> 00:05:59,051
входу. Типово використовують логістичну функцію,

74
00:05:59,051 --> 00:06:05,042
де суммарний вхід розраховується як раніше, як зсув плюс те що приходить з

75
00:06:05,042 --> 00:06:10,046
вхідних ліній, зважене. Вихід для логістичного нейрону це один

76
00:06:10,046 --> 00:06:13,095
на одиницю плюс е в ступені мінус суммарний вхід

77
00:06:14,025 --> 00:06:19,014
Якщо ви подумаєте про це, то суммарний вхід великий і позитивний

78
00:06:19,014 --> 00:06:22,069
Е в мінус великому позитивному ступені це нуль

79
00:06:22,069 --> 00:06:28,021
І так, вихід буде один. Якщо сумарний вхід великий і негативний, Е

80
00:06:28,021 --> 00:06:34,044
в мінус негативному ступені це велике число, і так вихід буде

81
00:06:34,044 --> 00:06:38,045
нулем. Так виглядає функція входу-виходу.

82
00:06:38,045 --> 00:06:42,016
Коли, загальний вхід нуль, Е в ступені

83
00:06:42,016 --> 00:06:48,074
мінус нуль це один, так вихід дорівнює половині. І добра відомість про сигмоїд, це те, що він

84
00:06:48,074 --> 00:06:53,047
має гладку похідну. Похідна змінюється монотонно

85
00:06:53,047 --> 00:06:59,089
І так вона добре себе поводить і вона робить навчання легшим, як ми побачимо

86
00:06:59,089 --> 00:07:04,069
в лекції три. Нарешті, стохастичні бінарні нейрони.

87
00:07:04,069 --> 00:07:07,098
Вони використовують таке саме рівняння як і логістичні елементи.

88
00:07:07,098 --> 00:07:13,027
Вони розраховують їх суммарний вхід так само і використовують логістичну функцію для

89
00:07:13,027 --> 00:07:18,018
розрахунку дробових значень, які є ймовірністю, що вони видадуть імпульс.

90
00:07:18,018 --> 00:07:23,028
Але замість того щоб видавати ймовірність як дробове число, вони насправді

91
00:07:23,028 --> 00:07:28,070
роблять ймовірністне рішення, і так ось що вони насправді виводять це тільки одиниця або

92
00:07:28,070 --> 00:07:30,089
нуль. Вони внутрішньо випадкові.

93
00:07:32,025 --> 00:07:36,075
Тобто, вони розцінюють P як ймовірність видачі одиниці, не

94
00:07:36,075 --> 00:07:39,089
дробове число. Звичайно, якщо вхід дуже великий, і

95
00:07:39,089 --> 00:07:42,079
позитивний вони майже завжди дають одиницю

96
00:07:42,079 --> 00:07:47,004
Якщо вхід великий і негативний, вони майже завжди повертають нуль.

97
00:07:48,045 --> 00:07:52,067
Ми можемо робити схожий трюк з пороговими лінійними  нейронами

98
00:07:52,067 --> 00:07:59,015
Ми можемо сказати що вихід це дробове значення , що приходить з порогового лінійного

99
00:07:59,015 --> 00:08:04,014
елементу, якщо його вихід більше нуля, це рівень продукування сигналу

100
00:08:04,014 --> 00:08:08,076
Це детерміністично. Але як тільки ми перевершили цей рівень

101
00:08:08,076 --> 00:08:13,016
продукування сигналу, насправді, варіанти в в яких сигнал буде згенеровано є випадковим

102
00:08:13,016 --> 00:08:14,098
процесом. Це Пуасонівський процес.

103
00:08:14,098 --> 00:08:19,073
Так, пороговий лінійний нейрон визначає рівень, але внутрішня випадковість в елементі

104
00:08:19,073 --> 00:08:22,089
визначає коли сигнал насправді виникне.