我們看到，即使Pandas允許我們遍歷DataFrame中的每一行 這通常是較慢的方法來完成某個給定的任務和 它不是很pandorable。 例如，如果我們想要寫一些程式來遍歷所有的 州，並產生一個平均的人口普查數字的列表。 我們可以使用unique功能在循環(loop)中來實現。 另一個選擇是使用DataFrame中groupby函數(通過...分組)。 此函數接受一些列(column)名稱，然後拆分DataFrame 成為塊塊按照這些名稱，它返回一個根據groupby的DataFrame物件。 這可以迭代運算， 然後返回一個元組(tuple)，其中第一個項目是分組(group)的條件， 第二個項目是通過該分組(grouping)而減小的dataframe。 由於它由兩個值組成，您可以拆開它們， 僅提取您感興趣的列，以計算平均值。 這裡是一些例子說明這兩種方法怎麼做的。 我們首先加載人口普查數據，然後排除州級的摘要， 其SUMLEV值是40. 這裡是一些例子說明這兩種方法怎麼做的。 我們首先加載人口普查數據，然後排除州級的 摘要，其SUMLEV值是40. 首先我們使用人口普查的州名。 我們得到一個獨特的州名的列表。 然後，對於每個州，我們減小DataFrame併計算人口平均值。 如果我們量這時間，我們看到它需要一段時間。 我已經設置了循環的次數，timeit將要十次 因為我是現場載入 這裡是一個同樣的方法採用groupby。 我們告訴Pandas我們有興趣州名稱進行分組，然後我們 只使用一列和該列中的所有數據來計算平均值。 當我們量時間，我們看到速度的巨大差異 現在，99％的時侯，您將使用groupby在一列或多列上。 但是，您實際上可以提供一個函數給groupby， 並使用它來分割數據。 這是一個有點虛構的例子，但 但讓我們說，你有大批的工作與大量的數據處理， 你想在一定時間內只處理三分之一左右的州。 我們可以創建一個返回0到2之間的數字的函數， 根據於州名稱的第一個字母。 然後我們可以告訴groupby要使用此函數來分開我們DataFrame。 請注意，為了做到這一點，您需要首先將 DataFrame的索引設置為groupby要用的列。 這裡有個例子，這裡有個例子， 我們將創建一個名為fun的新函數， 如果參數的第一個字母是(少於)大寫M，我們將返回0. 如果是(少於)大寫Q，我們將返回1，否則我們返回2. 然後我們將這個函數傳遞給DataFrame去應用， 然後看到DataFrame被分段，按照計算的組號。 這種技術，可以叫做輕量級的散列法(hashing) 通常用於分配任務跨越多個工作者。 它們或是核心處理器，超級計算機中的節點(node) 還是數據庫中的磁盤。 groupby的常見工作流程是分割數據， 應用一些功能函數，然後結合結果。 這被稱為拆分(split),應用(apply),組合(combine)模式。 我們已經看到了拆分方法，但是關於應用呢？ 當然，我們已經看到的迭代方法可以做到這一點，但是 groupby也有一個稱為agg的方法，它是aggregate(聚合)的縮寫。 此方法將函數應用於一個列或 一組數據列和返回結果。 使用agg，你只需傳遞進字典，你感興趣的列的名稱， 以及你要應用的函數。 例如，構建一個總結DataFrame，用每個州的平均人口， 我們可以給agg一個字典，用'CENSUS2010POP'為鍵(key)和 NumPy平均(average)功能函數(為value)。 現在，我想提到一個潛在的問題， 使用agg方法在groupby的物件。 您可以看到，您傳入字典的，它或可以用來識別 你要在其上應用函數的列(column)， 或命名輸出的列，如果有多個要應用的函數。 差異取決於您傳入字典的鍵(keys)及 其命名方式。 簡而言之，儘管許多文檔和示例將會討論一個單獨的 groupby物件，但實際上有兩種不同的物件。 DataFrameGroupBy和SeriesGroupBy物件。 這兩種物件的表現有一點不同，當與agg使用時。 例如，我們採取人口普查數據，將其轉換為以州名稱 為索引(index)的系列，僅用列CENSUS2010POP作為數據。 然後我們可以對它進行分組，通過索引，使用level參數。 然後我們調用agg方法，其中的字典包括NumPy 平均值(average)和NumPy總和(sum)功能函數。 Pandas將這些功能應用於系列物件，並且由於只有 一列數據，它將兩個功能應用於該列，同時打印出來。 我們可以用DataFrame而不是一個系列來做同樣的事情。 我們將索引設置為州名稱，我們按索引分組，並且 我們採用兩個列。 'POPESTIMATE2010'以及'POPESTIMATE2011'。 當我們調用agg使用兩個參數時， 它構建了一個很好的分層列空間，並且我們的所有功能都被應用。 混淆可能會出現，當我們改變在字典中標籤我們傳遞 給agg的，對應了我們DataFrame中的groupby標籤。 在這種情況下，Pandas認識到它們是相同的，並將功能 直接應用到列，而不是創建一個分層標記的列。 從我的角度來看，這是非常奇怪的行為， 而不是我期望的當標籤變化。 所以當使用聚合(aggregate/agg)函數時，請注意這一點。 因此 在這兩組中因此 在這兩組中 我經常使用groupby功能在我的工作中，它非常方便 分割資料幀，工作小塊的資料幀， 然後稍後再創建更大的DataFrames。