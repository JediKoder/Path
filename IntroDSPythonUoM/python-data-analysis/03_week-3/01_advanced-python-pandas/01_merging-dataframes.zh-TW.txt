上週，我們介紹了Pandas數據處理和 分析的程式庫。 我們看到，是實際上兩個非常相似的核心數據結構， 一維的列表(series)物件和二維的數據框(DataFrame)物件。 查詢這兩個數據結構以幾種不同的方式完成， 例如使用iloc或loc屬性進行對於行(row)的查詢，或者 使用方括號在物件本身進行對於列(column)的查詢。 最重要的是，我們看到一個可以查詢DataFrame和 series物件通過布林遮蔽(boolean masking)。 布林遮蔽是一種強大的過濾方法， 它允許我們使用廣播來確定在我們的分析中應該保留哪些數據。 在本週的講課中， 我們將詳細介紹如何操作DataFrame。 我們將探討如何使用GroupBy和Apply來減少和處理數據， 以及如何將多個文件中的數據集合在一起。 我們還將討論pandas一些有用的功能， 對傳統統計分析和機器學習。 我們從如何合併數據集開始吧。 我們已經看到如何將新數據添加到現有的DataFrame中。 只需使用帶有新列名稱的方括號運算符， 只要索引被共用，數據就添加了。 如果沒有共享索引，並且傳入一個標量值， 那麼記住一個純量只是一個整數或一個字串。 添加在列的新值，是以純量作為預設值。 如果我們想為每一行分配一個不同的值呢？ 那麼它變得更棘手。 如果我們可以將值，寫死程式到列表中，那麼Pandas將解拆解它們並 將它們分配給行。 但是，如果我們的列表不夠長，那麼我們不能這樣做， 因為pandas不知道丟失的值應該去哪裡。 這裡有個例子，這裡有個例子， 我們以前的講課中使用了一個商店購買的DataFrame， 其中索引(index)是商店列表，列(column)存儲購買數據。 如果我們要在DataFrame中添加一些名為Date的新列，那沒關係。 我們只需直接在DataFrame上使用方括號運算符， 只要列與其餘記錄一樣長。 如果我們要添加一些新的欄位， 可能是一個投遞標記，這也是很容易的，因為它是一個純量。 當我們只添加幾個項目時，會出現問題。 為了使其工作，我們必須為Pandas提供 足夠長的DataFrame的列表，以便可以填充每一行。 這意味著我們必須自己輸入none值。 如果我們每行都有一個獨特的索引， 那麼我們可以將新的列標識分配給該系列。 例如，如果我們在此範例中重置索引，因此DataFrame索引標記 為0到2，那麼我們使用這些標記創建一個新的系列，我們可引用它。 我們得到的結果是我們預期的。 這種方法的好方面是，我們可以忽略項目我們 不知道的，Pandas會為我們放進丟失值。 所以這是一個非常好的方法。 更常見的是，我們想要結合兩個較大的DataFrame在一起， 這是一個比較複雜的。 在我們跳入程式之前，我們需要解決一點關聯理論， 並設定一些語言的慣例。 這是維恩圖(Venn Daigram)。 維恩圖通常用於顯示集合的關係 例如，在左邊圓圈的人口是一所大學的學生。 在右邊圈的人口是在一所大學的工作人員。 中間的重疊地區是那些也是學生 的工作人員。 也許這些學生指導課程或打作業成績， 或從事研究實驗。 我們可以將這兩個人群視為各別的DataFrames中的索引， 可能有Person Name的標籤。 當我們想結合DataFrames時，我們有一些選擇。 首先，如果我們想要所有人的名單，無論 他們是工作人員還是學生，以及獲得所有他們的信息呢？ 在資料庫術語中，這稱為完整的外連接(full outer join)。 在集合(set)理論中，它被稱為聯盟(union)。 在維恩圖中，它代表了任何一個圈子的每個人。 很可能，我們只要那些我們擁有最多 資料的人，那些既是工作人員又是學生的人。 在數據庫術語中，這稱為內連接(inner join)。 或者在集合理論中，交集(intersection)。 這在維恩圖中被表示為重疊部分， 在每個圓的。 好的，讓我們來看一個我們如何在Pandas中做這個的例子， 在那裡我們將使用merge函數。 首先我們創建兩個DataFrames，員工和學生。 這些DataFrames有一些重疊，James和 Sally都是學生和工作人員，但Mike和Kelly不是。 重要的是，兩個DataFrames都按照我們要合併的值進行索引， 叫做Name。 如果我們想要這些的union， 我們將調用merge，傳遞在左邊的DataFrame和在右邊的DataFrame， 並且告訴merge我們想要使用外連接(outer join)。 我們告訴merge，我們要用左索引和右索引作為結合列。 我們在結果的DataFrame中看到每個人都被列出。 而且由於Mike沒有任何role， 而John沒有school，那些單元被列為缺失值(NaN)。 如果我們想要得到intersection，就是 那些也是員工的學生，我們可以將how屬性設置為inner。 而我們設置的結果DataFrame只有James和Sally。 現在，當合併DataFrames時，還有另外兩個常見的用例。 兩個例子都是我們稱之為集合加法(set addition)。 第一個是當我們想要得到所有員工的名單，不管 他們是否是學生。 但如果他們是學生，我們也想要獲得他們的學生細節。 為此，我們將使用左連接(left join)。 你可能猜測到接下來會是什麼。 我們想要一個所有學生和他們的角色的列表，如果他們也是工作人員。 為此，我們將使用右連接(right join)。 合併方法有一些其他有趣的參數。 首先，您不需要使用索引來加入，也可以使用列。這是一個例子。 這裡有個例子，這裡有個例子， 那麼當我們在DataFrames之間有衝突時會發生什麼？ 我們來看看，創建新的員工和 學生的DataFrames添加了一個位置資料。 在工作人員的DataFrame中， 這是一個辦公室的位置，我們可以找到工作人員。 而我們可以看到Director of HR在State Street， 而兩個學生在Washington大街。 但是對於學生DataFrame， 位置資料實際上是他們的家庭地址。 merge函數保留此資料，但附加_x或 _y以幫助區分哪個索引與哪個列的數據有關。 _x始終是左邊的DataFrame資料， 而_y始終是右邊的DataFrame資料。 你可以控制_x和 _y的名字使用附加的參數，如果你想。 現在你試試看。 以下是產品和發票的DataFrame。 該產品具有標識符和標價。 發票列出了人員，產品，標識符和數量。 假設我們要產生總計，我們如何將這兩個DataFrames 加在一起，以便我們有一個列出我們需要的所有信息？ 在我們離開的DataFrames的merge之前，讓我們來談談多索引和 多列。 學生和工作人員的名字很可能重疊， 但姓可能不重疊。 在這種情況下，我們使用一個列的名單表，應該用於 連接left_on和right_on參數的鍵。 正如你所看到的，James Wilde和James Hammond在兩個關鍵字上都不匹配。 所以inner連接的輸出不包括這些人， 只有Sally Brooks被保留。 那就是合併(merge)DataFrames。 Pandas在該區域有更多的選擇，但我認為合併功能可能 是最容易理解和最靈活的。 在下一節中，我們將討論如何編寫慣用的習語Pandas， 並深入研究操作DataFrames更高級的功能。