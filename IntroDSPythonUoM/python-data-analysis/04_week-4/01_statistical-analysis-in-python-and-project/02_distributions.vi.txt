Hãy bắt đầu thảo luận về phân phối. Chúng ta sẽ bắt đầu với cách phổ biến nhất là sử dụng đồng xu. Khi một đồng xu được tung lên nó có khả năng rơi xuống mặt ngửa và có khả năng tiếp đất mặt sấp. Nếu chúng ta tung một đồng xu nhiều lần chúng ta
thu số lượng đo lường của mặt ngửa và sấp và bằng trực giác chúng ta biết số lần chúng ta có mặt ngửa bằng với số lần chúng ta có mặt sấp. Nếu bạn lật đồng xu một trăm lần và bạn nhận được mặt ngửa mỗi lần bạn có thể
nghi ngờ sự công bằng của đồng xu đó. Chúng ta có thể xem xét kết quả mỗi lần tung đồng xu là biến ngẫu nhiên. Khi chúng ta xem xét tất cả các biến ngẫu nhiên cùng nhau chúng ta gọi đó là sự phân phối. Trong trường hợp này sự phân phối được gọi là nhị thức bởi vì có hai đầu ra là ngửa và sấp. Nó cũng là một ví dụ về sự phân phối kín bởi vì chỉ có các loại được sử dụng đầu và đuôi và không phải số thực. Numpy thực sự có một số phân phối được xây dựng trong nó cho phép chúng ta tung ngẫu nhiên đồng xu với các thông số được đưa ra. Hãy thử ví dụ này nhé. Ở đây chúng ta yêu cầu một số từ phân phối nhị thức numpy. Chúng ta có hai thông số xuất ra. Đầu tiên là số lần chúng ta muốn nó chạy. Thứ hai là cơ hội chúng ta nhận được 0 cái mà chúng ta sẽ sử dụng để đại diện phần đầu ở đây. Hãy chạy một vòng mô phỏng. Tuyệt vời vì thế nếu bạn theo dõi một notebook jupiter bạn nhận được 0 hoặc là 1. Và một nửa giá trị đồng ý với cái mà tôi có. Nếu chúng ta chạy mô phỏng một trăm lần và chia kết quả cho một nghìn. Khi bạn thấy số gần bằng 0.5 có nghĩa là một nửa thời gian chúng ta đã có phần đầu và một nửa thời gian chúng ta có phần đuôi tất nhiên sự phân phối nhị thức chỉ là một ví dụ đơn giản. Chúng ta cũng có sự phân phối nhị thức không đồng đều. Ví dụ mặc dù chúng ta ở trong vòng xoáy ngày hôm này. Nó khá là thấp thậm chí chúng ta có vòng xoáy ở đây. Có thể có một phần trăm cơ hội chúng ta có thể đặt phân phối nhị thức là trọng lường trong numpy. Nếu chúng ta chạy cái này 100,000 lần chúng ta thấy có một vòng xoáy nhỏ. Vì thế bạn có thể băn khoăn tại sao tôi nói đến sự phân phối đơn giản và trực quan. Ý tôi là chúng ta hiểu việc lật một đồng xu khi chúng ta phải đưa ra quyết định quan trọng như trẻ con. Nhưng cái tôi muốn minh họa là các công cụ tính toán bắt đầu cho phép chúng ta mô phỏng thế giới cái mà giuso chúng ta trả lời các câu hỏi. Tôi có thể cho bạn thấy bài toán đằng sau điều này vì vậy chúng ta có thể đưa ra các khả năng. Nhưng sự mô phỏng là một hình thức của sự truy vấn. Hãy lấy một ví dụ nữa. Giả sử lốc xoáy ở đây trong Ann Arbor trong bất kì ngày nào. 1% bất kể thời gian nào trong năm. Điều đó cao hơn thực tế nhưng nó tạo ra một phiên bản nhanh hơn. Giả sử nếu có một cơn lốc xoáy tôi sẽ tránh xa cửa sổ và trốn sau đó quay trở lại và ghi lại ngày hôm sau. Điều này xảy ra hai ngày liên tiếp. Chúng ta có thể sử dụng sự phân phối nhị thức trong numpy để mô phỏng điều này. Ở đây chúng ta tạo ra một danh sách trống và chúng ta tạo ra một số sự kiện có thể xảy ra bằng việc yêu cầu chức năng nhị phân numpy. Chúng ta sẽ làm điều này một trăm lần. Quá trình này được gọi là lấy mẫu phân phối. Bây giờ chúng ta có thể viết một vòng lặp nhỏ đi qua danh sách và tìm kiếm hai cặp liền kề bất kì có nghĩa là có hai ngày cơn lốc xoáy quay trở lại. Chúng ta thấy rằng điều này kết thúc khoảng ngày 102 hơn 3,000 năm. Rõ ràng nó quá nhiều với tôi. Mục đích của tôi cở đây là sức mạnh tính toán hiện đại cho phép chúng ta mô phỏng nhanh chóng hiệu quả của các thông số khác nhau trong phân phối. Dẫn đến một cách mới để tìm hiểu vấn đề. Bạn không phải làm tất cả các bài toán bạn có thể khá thường xuyên mô phỏng và quan sát kết quả. Trong bài giảng tiếp theo chúng ta sẽ nói một chút về sự phân phát.