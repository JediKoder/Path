Rất nhiều sự phân phối bạn sử dụng trong khoa học dữ liệu không phải nhị thức rời rạc và thay vì đó là liên tục nơi giá trị của các quan sát có sẵn không phải là một loại như đầu hoặc đuôi, nhưng có thể được đại diện vởi một số thực. Rất phổ biến với các biểu đồ phân phối khi nói về chúng, nơi mà trục x là giá trị quan sát và trục y đại diện dữ liệu mà quan sát đã có sẽ xảy ra. Nếu tất cả các số được rút khi bạn lấy mẫu từ nó, điều này có thể được vẽ là một đường ngang. Và đường này được gọi là phân phối đồng đều. Có một số phân phối khác mà có nhiều điều thú vị hơn. Hãy lấy quan sát thông thường được gọi là phân phối Gausian hoặc đôi khi là một đường cong. Phân phối này giống như một cái bướu nơi số có xác suất cao nhiết được vẽ là 0 và có hai đường cong được giảm trên hai phía của trục x. Một trong các thuộc tính của phân phối này là 0, không phải hai đường cong hai bên đối xứng. Tôi muốn giới thiệu cho bạn giá trị thuật ngữ mong muốn. Tôi nghĩ hầu hết chúng ta quen với ý nghĩa tổng tất cả các giá trị được chia bởi tổng số giá trị. Tính một giá trị là một quá trình tính toán và nó diễn ra bằng cách nhìn các mẫu từ phân phối. Ví dụ 3 lần có thể cho bạn 1, 2 và 6, giá trị ý nghĩa là 4.5. Giá trị mong muốn có thể từ phân phối cơ bản là những gì chúng ta đã làm một số lượng vô hạn. Kết quả là 3.5 bởi vì mỗi mặt chết có thể xuất hiện. Như vậy giá trị mong muốn là 3,5. Trong khi giá trị ý nghĩa phụ thuộc vào các mẫu mà chúng ta lấy và hội tụ với giá trị mong muốn đưa ra một tập hợp mẫu lớn. Chúng ta sẽ nói về các giá trị trong muốn trong khóa học thứ 3. Phần thứ hai là phương sai của phân phối có thể được mô tả theo một cách nhất định. Phương sai là thước đo các giá trị mẫu mở rộng. Hãy nhìn vào định dạng 5 đặc điểm khác nhau của ủng hộ phương pháp đánh giá theo chỉ tiêu Đầu tiên chúng ta có thể nói về xu hướng phân phối trung tâm, và phép đo chúng ta sẽ sử dụng cho cái này là chế độ, trung bình hoặc ý nghĩa. Đặc trưng này là nơi số lượng xác suất ở trong phân phối. Chúng ta cũng có thể nói veef sự biến đổi trong phân phối. Có hai cách chúng ta có thể nói về điều này. Độ lệch chuẩn là một, số trung vị là hai. Độ lệch chuẩn là phép đo đơn giản về sự khác nhau của mỗi mục, Trong mẫy của chúng ta từ ý nghĩa. Đây là công thức của độ lệch chuẩn. Nó có thể đáng sợ hơn so với thực tế một chút. Hãy đi qua cách chúng ta sẽ viết điều này. Hãy lấy 1000 mẫu từ phân phối thông thướng với giá trị mong muốn là 0.75 và độ lệch chuẩn là 1. Sau đó chungsta tính toán ý nghãi thực sử dụng tính năng numpy. Phần bên trong tổng là xi_x. Xi là mục hiện tại trong danh sách và x bar là ý nghĩa. Chúng ta tính toán sự khác biệt sau đó chúng ta đưa ra kêt quả, chúng ta tổng lại tất cả điều này. Đó có thể là một địa điểm hợp lí để sử dụng bản đồ và áp dụng đổi tượng hàm để tính toán sự khác nhau giữa ý nghĩa và giá trị được đo. Sau đó để chuyển điều này về danh sách, numpy có thể sử dụng nó. Bây giờ chungst a phải lấy mỗi giá trị, tính tổng chúng với nhau và lấy gốc. Đó là kích thước của độ lệch chuẩn. Nó bao gồm khoảng 68% khu vực xung quanh ý nghĩa, chia đều xung quanh. Bây giờ chúng ta không phải làm tất cả các công việc nhưng tôi muốn chỉ cho bạn cách bạn có thể lấy mẫu từ sự phân phối, tạo ra một chương trình mô tả chính xác của một công thức và áp dụng nó với dữ liệu của bạn. Nhưng với độ lệch chuẩn đó là phép đo cụ thể các biến, numpy có một chức năng bên trong bạn có thể áp dụng gọi là STD. Có các phép đo về sự phân phối thú vị để nói đến. Một trong số đó là hình dạng của sự phân phối và nó được gọi là độ nhọn. Chúng ta có thể đo độ nhọn sử dụng các chwucs năng thống kê trong gói Scipy. Một giá trị tiêu cực có nghĩa là đường cong hơi phẳng hơn phân phối thông thường và giá trị tích cực có nghĩa là đường cong nhọn hơn thông thường. Nhớ rằng chúng ta không đo độ nhọn của phân phối mỗi se nhưng hàng trăm giá trị chúng ta đã lấy mẫu ra khỏi sự phân phối. Đó là nét độc đóc nhưng là khác biệt quan trọng. Chúng ta cũng có thể bỏ phân phối thông thường và đẩy đỉnh đường cong một cách hoặc cách khác. Nó được goi là xiên, Nếu chúng ta kiểm tra dữ liệu mẫu hiện tại chúng ta thấy rằng không có nhiều mặt xiên. Hãy chuyển phân phối và nhìn vào phân phối được gọi là phân phối bình phương Chi, nó cũng khá phổ biến trong thống kê. Phân phối bình phương Chi có một thông số gọi là cấp bậc tự do. Các cấp bậc tự do liên quan đến số lượng các mẫu mà bạn lấy từ phân phối thông thường. Rất quan trọng để thử nghiệm. Nhưng cái tôi muốn bạn quan sát là cấp bậc tự do tăng lên, hình dạng của phân phối bình phương Chi thay đổi. Cụ thể mặt xiên bên trái bắt đầu di chuyển về phía trung tâm. Chúng ta có thể quan sát điều này qua mô phỏng. Đầu tiên chúng ta sẽ lấy 1000 giá trị từ phân phối bình phương Chi với cấp bậc tự do là 2. Bây giờ chúng ta có thể thấy mặt xiên khá lớn. Bây giờ nếu chúng ta thay đổi mẫu cấp bậc tự do tới 5. Chúng ta thấy rằng mặt xiên bị giảm đáng kể. Chúng ta có thể vẽ bên phải trong notebook jupiter. Tôi sẽ không nói nhiều về thư viện chúng ta đang sử dụng ở đây, bởi vì đó là chủ đề của khóa học tiếp theo. Nhưng bạn có thế thấy biểu đò với điểm với hai cấp bậc tự do là sai lệch hơn về bên trái. Trong khi điểm của chúng ta với cấp bậc tự do 5 không vị lệch nhiều. Tôi khuyên bạn thường xuyên sử dụng ghi chú này và thay đổi các thông số và xem cách các cấp bậc tự do thay đổi độ xiên của phân phối. Khía cạnh cuối cùng của phân phối mà tôi muốn nói đến là phương thức. Tất cả các phân phối tôi chỉ ra có cao điểm, một đỉnh. Nhưng chúng ta có nhiều đỉnh là gì? Phân phối này có hai điểm vì thế chúng ta gọi là hai mốt. Đó là sự phân phối thú vị và xảy ra thường xuyên trong khai thác dữ liệu. Chúng ta sẽ nói một chút về chúng trong khóa học thứ ba. Nhưng chúng ta có thể lập mô hình sử dụng hai phân phối thông thường với các thông số khác nhau. Điều đó gọi là mô hình hỗn hợp Gaussian và rất hữu ích khi nhóm dữ liệu. Đó là một bài giảng dài nhưng tôi nghĩ nó có thể được đưa ra thảo luận về sự phân phối và nhận các điểm chính. Nhớ rằng sự phân phối đó chỉ là một hình dạng mô tả xác suất giá trị được kéo khi chúng ta lấy mẫu. Mỗi numpy và scipy có một số khác nhau được xây dựng bên trong cho chúng ta để có thể lấy mẫu từ đó. Điểm cuối cùng tôi muốn để lại cho bạn ở đây là tài liệu tham khảo. Nếu bạn thấy cách này khám phá số liệu thống kê thú vị. Alan Downey viết một cuốn sách rất hay gọi là Think Stats xuất bản bởi O'Reilly. Tôi nghĩ ông làm một công việc tốt về dạy cách nghĩ về thống kê từ lập trình. Nơi mà bạn viết các chức năng đằng sau các phương pháp thống kê. Nó không phải một cuốn sách tham khảo nhưng nó là cách hay để tiếp cận việc học phần cơ bản của thống kê. Allen thậm chí sao chép sách có sẵn trên trang web của ông ấy thành dạng PDF và tất nhiên tất cả mã đã được làm trong python.