我們將在本週的講課中很快的討論一下缺失的數據。 我們已經預先看到了Pandas如何處理缺失值，使用None類型和 在NumPy使用NaN。 缺失值在數據清理活動中很常見。 我們應該討論幾個注意事項和討論要點。 第一，在內置的載入函數，從帶分隔符號的文件，有提供控制 缺失值的幾種方法。 這些中最有密切關係的是na_values選項名單， 來指示可能引用缺失值的一些字串。 例如，我的一些社會學家同事經常 使用99在二進制類中來表示那裡沒有數值。 所以這很方便。 您也可以使用na_filter選項來關閉空白過濾， 如果實際上空白對你是有用的。 但實際上這是相當少見的。 除了控制如何加載缺失值的規則之外， 有時候有必要將缺少值視為具有實際信息。 我從我自己的研究中給一個例子。 我經常處理從網上學習系統的記錄。 尤其是尤其是 我已經完成了幾個專案，有關課程採集系統中的影片使用。 在這些系統中，播放器具常常有心跳(規律傳送訊號)功能， 將播放統計資訊經常發送到服務器，也許每隔30秒。 這些活動資料可以變大，因為他們可以承載播放系統的整個狀態， 例如影片播放頭在哪裡，影片大小， 哪個影片被呈現到螢幕，音量是多大的等等。 如果我們載入數據文件log.txt， 我們可以看到一個這樣的例子。 在這個數據中，第一列是Unix紀元格式的時間戳。 下一列是用戶名，後跟他們正在訪問的網頁和 他們正在播放的影片。 DataFrame的每一行都有播放位置。 我們可以看到，隨著播放位置增加1， 時間戳增加約30秒。 除了用戶Bob。 原來，Bob已經暫停播放， 隨著時間的推移，播放位置不會改變。 注意，我們嘗試從數據中獲取這些知識是多麼困難， 因為它沒有按時間戳排序，如你可能期望的。 這在種具有高度並行性的系統上實際上並不罕見。 在paused和volume列中缺少值很多。 通過網絡發送此信息效率不高，如果 沒有更改。 因此，這個特定的系統只是將null值插入數據庫， 如果沒有任何更改。 Pandas的一個方便的功能 來處理缺失值是填充功能，fillna。 此函數需要一些參數， 例如，您可以傳入一個稱為標量值的單一值， 將所有缺少的數據更改為一個固定值。 這在這種情況下並不真正適用，但它是一個很常見的用例。 接下來是方法參數。 兩個常用的填充值是ffill和bfill。 ffill是向前填補,它更新na值 特定單元格在使用上一行的值。 重要的是要注意，您的數據需要有排序， 以使其具有您可能需要的效果。 來自傳統資料庫管理系統的數據通常沒有 排序保證，就像這個數據一樣。 所以要小心。 在Pandas我們可以按索引或值排序。 在這裡，我們只是將時間戳記提升成索引，然後對索引進行排序。 如果我們仔細觀察輸出，但我們會注意到索引 不是真的唯一 兩個用戶似乎能夠同時使用該系統。 再次，一個很常見的情況。 讓我們重新設置索引，然後使用一些多層次索引， 並將用戶名提升到第二層次索引來處理該問題。 現在我們已經對數據進行了索引和 排序，我們可以使用ffill來填寫缺少的數據。 最好記住，在處理缺失值時， 你可以處理單個列或 一組的列通過投射它們，按照我們前面提到的方式。 所以你不必在一個指令中修復所有缺少值。 有時使用正向填充是有用的，有時是向後填充， 有時有用的只用單個數字。 最近，Pandas團隊介紹了一種填充缺失值的方法， 用列表，它的長度與DataFrame相同。 這使得很容易導出缺失的值，如果您 有這樣做的基礎。 例如，如果您處理收據，有 最終價格的列和折扣的列，但是缺少資訊在原始 價格的列，您可以使用fillna自動填充。 關於缺失值的最後一個註釋。 當您在DataFrames上使用統計功能時， 這些函數通常會忽略缺失值。 例如，如果您嘗試計算DataFrame的平均值， 則底層NumPy函數將忽略缺失值。 這通常是你想要的， 但你應該知道那些值被排除在外。