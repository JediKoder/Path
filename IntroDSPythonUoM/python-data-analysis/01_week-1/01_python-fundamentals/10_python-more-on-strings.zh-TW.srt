1
00:00:08,716 --> 00:00:11,808
我們討論了字串(string)，當我們討論列表(list)和分切(slicing)時，並且

2
00:00:11,808 --> 00:00:15,116
你已經看到了拆解strings的方法，通過使用分割函數，

3
00:00:15,116 --> 00:00:17,430
或者通過直接索引。

4
00:00:17,430 --> 00:00:20,390
Python中的strings也可能有點令人不容易理解，我想分享

5
00:00:20,390 --> 00:00:23,220
一些關於如何處理strings的細節，以便你能了解它們。

6
00:00:24,230 --> 00:00:26,820
Strings在Python-3是基於Unicode。

7
00:00:26,820 --> 00:00:30,060
在早期計算時期，字串的字元被限制為256個不同

8
00:00:30,060 --> 00:00:31,970
的值之一。

9
00:00:31,970 --> 00:00:33,400
這足以得到所有的大寫或

10
00:00:33,400 --> 00:00:37,890
小寫的拉丁字符，加上表示單位數的數字。

11
00:00:37,890 --> 00:00:40,330
這種語言被稱為ASCII，是相當簡潔的。

12
00:00:40,330 --> 00:00:44,625
但是世界不僅僅是拉丁字元，還需要支持

13
00:00:44,625 --> 00:00:48,590
非英語語言，以及不常用的字元，

14
00:00:48,590 --> 00:00:51,700
但是常用在其他的地方，像數學運算符號。

15
00:00:52,860 --> 00:00:57,610
Unicode轉換格式，或簡稱UTF，是試圖解決這個問題的嘗試。

16
00:00:57,610 --> 00:01:00,880
它可以用來代表超過一百萬個不同的字元。

17
00:01:00,880 --> 00:01:04,170
這不僅包括你可能料想到的人類語言，

18
00:01:04,170 --> 00:01:05,640
還包括像emojis這樣的符號。

19
00:01:06,700 --> 00:01:08,990
Python3自動預設使用Unicode，因此

20
00:01:08,990 --> 00:01:11,850
在處理國際字元集時沒有問題。

21
00:01:12,860 --> 00:01:16,220
除Unicode之外，Python使用特殊語言來

22
00:01:16,220 --> 00:01:18,536
設置字串輸出的格式。

23
00:01:18,536 --> 00:01:22,051
動態類型的一個挑戰是，有點不太清楚，什麼時候

24
00:01:22,051 --> 00:01:24,890
你必須自己進行類型轉換，

25
00:01:24,890 --> 00:01:27,605
我們在上一個講課中看到，如果我們印出一個名字和

26
00:01:27,605 --> 00:01:32,275
數字，我們不能使用串聯而不先調用str函數

27
00:01:32,275 --> 00:01:34,945
將數字首先轉換成字串。

28
00:01:34,945 --> 00:01:38,565
這造成了很多令人討厭的程式，每個操作你想要

29
00:01:38,565 --> 00:01:41,235
串聯的，都被包卷在這個str函數中。

30
00:01:41,235 --> 00:01:46,155
Python字串格式處理的迷你語言允許你編寫

31
00:01:46,155 --> 00:01:50,490
一個字串語句，指示要評估的變數的預留位置。

32
00:01:50,490 --> 00:01:55,530
然後，你可以傳遞這些變量，用命名或有順序的參數，

33
00:01:55,530 --> 00:01:58,110
Python會為你處理字串操作。

34
00:01:59,530 --> 00:02:00,940
這裡有個例子，這裡有個例子，

35
00:02:00,940 --> 00:02:03,360
想像我們有個採購訂單的詳細資料和

36
00:02:03,360 --> 00:02:08,120
一個字典(dictionary)，其中包括一些項目，價格和人的名字。

37
00:02:09,480 --> 00:02:13,100
我們可以寫一個銷售的字串格式語句，包含這些項目

38
00:02:13,100 --> 00:02:14,130
使用大括號。

39
00:02:15,140 --> 00:02:18,440
然後，我們可以調用該字串的格式方法，

40
00:02:18,440 --> 00:02:21,439
並適當的傳遞我們想要替換的值。

41
00:02:22,570 --> 00:02:26,210
字串格式處理語言可以讓你做得更多其他的。

42
00:02:26,210 --> 00:02:30,210
你可以控制許多不同的事情，例如小數位，

43
00:02:30,210 --> 00:02:33,970
浮點數，或者是否要在正數前面

44
00:02:33,970 --> 00:02:38,870
用加號，或者將字串的對齊方式設置為左對齊或右對齊。

45
00:02:38,870 --> 00:02:42,380
甚至可以使用科學符號。

46
00:02:42,380 --> 00:02:45,740
我在課程資源中鏈接了有關的資料。

47
00:02:45,740 --> 00:02:47,855
能夠使用字串程式庫和

48
00:02:47,855 --> 00:02:51,210
格式處理語言將是你的第一個作業的重要部分。

49
00:02:52,600 --> 00:02:54,090
這是一個簡短的講課，

50
00:02:54,090 --> 00:02:57,460
但字串操作是數據清理的重要部分。

51
00:02:57,460 --> 00:03:00,611
你將學習更多關於字串操作通過在這個課程中

52
00:03:00,611 --> 00:03:02,300
的作業。

53
00:03:02,300 --> 00:03:03,440
在下一個影片中，

54
00:03:03,440 --> 00:03:06,810
我們的研究生助理將向你展示如何將一些基本

55
00:03:06,810 --> 00:03:10,430
數據分析結合在一起，通過讀入和寫入有分隔標記的數據文件。