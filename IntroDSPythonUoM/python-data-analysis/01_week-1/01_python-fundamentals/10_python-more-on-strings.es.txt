Hemos hablado de cadenas 
cuando hablamos de listas y "rebanado" y has visto maneras de dividir cadenas
a través de la función "split", Y mediante la
indexación directa. Las cadenas en Python pueden resultar
un poco frustrantes, por eso quiero compartir algunos detalles más
sobre el manejo de cadenas, En Python 3, las cadenas
están basadas en Unicode. Antiguamente las cadenas 
estaban limitadas a 256 valores diferentes. Esto era suficiente
para obtener todas las letras minúsculas con caracteres latinos, 
y representar los números de un solo dígito. Esa representación se llamaba ASCII
y era bastante compacta. Pero el mundo no vive sólo con caracteres
latinos, y hay una necesidad de soporte para otros idiomas distintos del inglés
y caracteres menos usuales en las palabras, pero comunes en otros
ámbitos, como los operadores matemáticos. El formato de transformación Unicode o  UTF,
es un intento de resolver esta situación. Se puede utilizar para representar
más de un millón de caracteres diferentes. Esto no sólo incluye
a los idiomas humanos, sino también a símbolos
como los emojis. Python 3, por defecto,
utiliza Unicode por lo tanto No hay problema en el manejo 
de caracteres internacionales. Además de Unicode,
Python utiliza un lenguaje especial para formatear la forma
en que se muestran las cadenas. Uno de los desafíos con la tipificación dinámica
es que no suele quedar claro cuando es necesario que uno
mismo haga la conversión. En la última lección habíamos visto
que si queríamos imprimir un nombre y un número no era posible concatenarlos
sin invocar previamente a la función "str" para convertir el
número en una cadena. Esto crea un montón de código desagradable,
donde cada operador que buscas para concatenar queda 
envuelto en la función "str". El mini lenguaje que ofrece Python para
formateo de cadenas permite escribir una sentencia indicando marcadores de posición
para las variables que se van a evaluar. Luego pasas las variables,
ya sea nombrándolas o en argumentos ordenados y Python se encarga de la
manipulación de la cadena. Pero la ciencia forense no es muy buena determinando Mens Rea, la intención. Imaginemos que tenemos detalles
de órdenes de compra y un diccionario, que incluye cantidad de artículos,
precio y el nombre de una persona. Podemos escribir una sentencia con
la cadena que incluye estos artículos usando llaves. Luego podemos llamar al
método "format" en dicha cadena y pasar los valores que queremos
que sean sustituidos según corresponda. Ahora bien, el lenguaje de formateo de cadenas
permite hacer mucho más que esto. Puedes controlar una serie de 
cosas  diferentes como espacios decimales, agregado de signos de más
en números positivos, establecer la alineación de 
cadenas a izquierda o justificación a derecha. O incluso habilitar
el uso de notación científica. He dejado un enlace a la página de documentación
en la sección de recursos del curso. Ser capaz de usar la
librería de cadenas y manejar su lenguaje de formateo son una
parte importante de la primera tarea. Esta ha sido una
lección corta, pero la manipulación de cadenas es
una parte importante de la limpieza de datos. Aprenderás mucho más sobre manipulación
de cadenas en este curso a través de las tareas. De todos modos, 
en el próximo video, Un estudiante de posgrado que será nuestro asistente
te mostrará cómo hacer análisis de datos básico a través de la lectura y escritura
de archivos de datos delimitados.