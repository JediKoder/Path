歡迎來到今天的課程，我們會在這裡學習到基本的迭代 通過一個.csv文件，來創建字典和收集匯總統計。 首先，讓我們導入.csv程序模組，它將幫助我們去讀進我們的.csv文件。 使用一些Python魔法， 讓我們設置列印的浮點數據精度為2。 現在讓我們使用csv.DictReader讀取我們的mpg.csv 並將其轉換為列表的字典。 我們來看看我們列表中的前三個元素。 我們可以看到列表中的字典具有.csv的列欄名稱 作為keys，和每個特定車的數據都是它的values。 我們的列表的長度是234， 這意味著我們有234個汽車的字典在.csv文件中。 我們可以查看.csv列欄名稱，使用key的方法。 假設我們要找到所有車輛的平均城市mpg，從我們的.csv文件。 我們總計列表中的所有字典的城市mpg資料， 並除以列表的長度。 因為我們的字典中所有的值的類型都是strings， 所以我們需要轉換為float來執行數學運算。 同樣的，我們可以在我們的.csv文件中找到所有汽車的平均公路mpg。 平均公路燃油經濟性高於 城市是合理的。 現在，讓我們看看一個更複雜的例子。 比如說我們想要知道平均城市mpg是什麼， 但按照一輛車的汽缸數目來分組。 從字典的汽缸資料創建一組數值， 會給我們的獨特的汽缸數目。 我們看到我們車的資料有4、5、6和8個汽缸。 首先，我們將創建一個空的list，我們將在其中存儲我們的計算。 接下來，讓我們迭代所有的汽缸數目。 然後我們將反覆迭代所有的字典。 如果我們在字典的汽缸數目級別， 符合我們要計算的平均水準的汽缸數目級別， 我們加mpg數值到我們的summpg變數和遞增計數。 經過所有的字典資料，我們計算平均mpg和 將它添加到我們的列表中。 為了讓事情更清楚， 我將列表從最低數目的汽缸排列到最高的。 我們可以看到城市燃油經濟性似乎在下降，隨著 汽缸的數目增加。 讓我們看多一個類似的例子。 假設我們有興趣尋找平均公路mpg 在不同的車輛類別中。 從不同車輛類別來看，我們有2座車、小型車、中型車， 迷你麵包車、小貨車、微型車和運動型多用途車SUV。 同樣與上一個例子，我們遍歷所有類別的車輛， 然後我們將反覆迭代所有的字典。 如果車輛類別 在字典裡與我們正在計算平均公路mpg的車輛類別相符合 ，我們將值添加到我們的總數，並遞增計數。 然後我們進行平均計算，並將其追加到我們的清單中。 這次，讓我們列表從最低mpg到最高的進行排序。 看起來像小貨車有最糟糕的燃油經濟性，小型車的最好。 這就是通過迭代來總結數據的方法。 不要擔心，如果這似乎有點低效或乏味。 下個星期，我們將會學習Pandas，一個Python程序模組，可以在Python中 實現更簡單，更高效，更強大的數據分析。 感謝收看！ 感謝您的收看。希望能很快見到你。