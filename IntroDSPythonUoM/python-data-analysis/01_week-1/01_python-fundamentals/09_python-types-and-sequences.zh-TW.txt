Python沒有靜態類型並不意味著Python中沒有類型。 Python語言有一個內置的函數，稱為type，它將顯示 提及的是什麼類型。 一些常見的類型包括字串(string)，和我們已經討論過的None類型 整數(interger)和浮點(floating-point)變數。 如我們所見，您可以有參考函數以及 函數類型也存在。 有類型的物件具有與它們相關聯的屬性， 這些屬性可以是數據或函數。 許多Python構建於不同的序列或集合類型。 有三種原始的集合類型，我們將要討論， 元組(tuple)，列表(list)和字典(dictionary)。 元組(tuple)是一個本身不可變的變數序列。 這意味著元組(tuple)含有次序的項目， 而且一旦創建就不能更改。 我們使用括號來表示元組(tuple)，我們可以混合不同的類型 在元組裡。 這是一個有四個項目的元組(tuple)。 兩個是數字，兩個是字串(string)。 請注意這裡，我已經使用單引號的 字串(string)，而以前我已經使用雙引號。 在Python中，單引號或雙引號都可用於表示字串(string)。 列表(list)非常相似，但它們可以是可以改變的， 因此你可以更改其長度，元件的數量和更改元件。 我們使用方括號來表示列表(list)。 有幾種不同的方式來更改列表的內容。 一個是通過附加功能，允許你將新項目附加到 列表的末尾。 列表(list)和元組(tuple)都是可以反覆迭代的類型，因此 您可以寫迴圈去遍歷它的每個元件。 通常的標準是，如果你想查看列表中的每個項目是使用一個for語句。 這與Java和C＃等語言中的for-each迴圈類似， 但請注意，不需要指定類型。 列表(list)和元組(tuple)的數組也可以存取，類似存取陣列(array)在其他語言， 通過使用方括號運算程序，它叫做索引運算程序。 列表(list)的第一個項目從零開始， 要獲取列表的長度，我們使用內置的len函數。 還有一些其他常見的功能，你可能會料想到，像最小(min)和最 大值(max)，它會找到列表或元組中的最小值或最大值。 Python列表(list)和 元組(tuple)也可以允許有一些基本的數學運算。 例如加號(+)把列表(list)連接起來。 星號(*乘號)重複列表的值。 一個非常常見的運算符是in運算符。 這將查看項目是否隸屬在組合中，並返回一個布爾值(boolean-value)，true或false， 根據一個項目是否在給定的列表中。 我們將會更深入運算符和特殊類型的序列 在未來的一周，當我們研究一種技術稱為廣播(broadcasting)的時候。 也許最有趣的操作，你可以使用在列表稱為切片(slicing)。 其中用於存取元素的方括號陣列語法，可能看起來與 你在其他語言中看到的語法相似。 在Python中，索引操作允許你使用多個數值。 第一個參數是起始位置， 如果這是唯一的元素，然後一個項目從列表中返回。 第二個參數是切片的結尾。 這一個結尾是不包括的，所以如果你的第一個參數為零， 下一個參數為1，那麼你只得到一個項目。 這很容易用一個例子來解釋。 Python的一個方便之處在於，所有的字串(string)實際上 只是字的列表(list)，所以對它們用切片是很容易的。 這裡有個例子，這裡有個例子， 當我們運行x[0]或x[0：1]時，我們只得到字串的第一個字。 但是當我們運行x[0：2]時，我們得到字串的前兩個字。 我們的索引值也可以是負數，這真的很酷。 這意味著從字串的後面索引。 所以x[-1]得到我們字串的最後一個字，而x[-4：-2] 讀取從最後的第4個到最後第2個位置的所有的字。 最後，如果我們想要引用到字串的開端或 結尾，我們可以通過只將參數留空白。 所以x[：3]從第一個字開始，直到位置3。 而x[3：]從第四個字開始，因為索引總是從 零開始，一直到列表的末尾。 切片是Python語言的核心， 也是Python的科學計算的重要組成部分。 特別是如果你開始矩陣(matrix)的操作。 我們將在下一組課程中詳細介紹切片。 但這是一個讓你開始的問題。 現在，我在這裡稍微談一談操縱字串。 切片不是操作字串的唯一方法。 一個常見的活動是根據子字串(substring)來分割字串。 也就是說，通過整個字串來尋找其中的模式， 並適當地分割它。 這被稱為正則表達式(regular-expression)評估， 我們將在專業領域課程中詳細介紹這一點， 在涉及文本數據挖掘(text-mining)的部分，因為它是一個常見的操作。 但Python有一些文本分析的基本工具。 我要在這裡顯示給你們。 我們看到，字串只是字的列表。 所以你可以在列表(list)中執行的操作，也可以在字串(string)上執行。 這意味著你可以使用加號運算(+)將兩個字串連接起來。 並且用乘法運算(*)來重複給定的字串。 你也可以搜索字串使用in操作符。 字串(string)類型具有關聯的函數稱為拆分(split)。 此函數將字串分解成
子字串基於簡單的模式 例如這裡， 我將根據空格字符的存在來分割我的全名。 結果是四個元件的列表。 我們可以選擇索引運算的第一個元素作為名字， 最後一個元素是我的姓氏。 我們會在字串上多談一點點，但在我們做之前， 我想談談字典(dictionaries)。 字典(dictionaries)類似於列表和元組，它們包含一些集合 的項目，但它們是有標記而沒有排序的集合。 這意味著每一個插入字典的值， 您還必須要提供一個鍵(key)來獲取該值。 在其他語言中，這種結構通常被稱為地圖。 在Python中，我們使用大括號{}表示字典。 以下的示例是我們將名字連接到電子郵件地址。 你可以看到，當我們表示一個創建的字典項目時， 會使用一個冒號(:)來分隔一對值。 然後，你可以檢索給定標記的值，使用索引運算。 你在字典中用於索引或值的類型可以是任何類型。 如果你喜歡，這可能是一個混合的類型。 我們可以將新項目添加到字典中，使用相同的索引運算符， 我們剛剛用過的， 放在一個程式的左邊。 你可以通過多種方式反覆迭代字典中的所有項目。 首先，你可以迭代所有的鍵keys， 只挑出適合你的需要的內容即可。 或者你可以反覆迭代值(value)，而忽略不理鍵(key)。 最後，你可以同時迭代value和key兩者， 使用item的功能。 最後一個例子有點不同， 這是一個叫做拆解的例子。 在Python中，你可以有序列sequence-亦即有數據的list或tuple， 你可以將這些項目分解成不同的變數, 用一個指定(assignment)語句。 這是另一個例子，我們有一個元組(tuple)，有我的名字， 姓氏和電子郵件地址。 我聲明三個變量並將它們指派給元組(tuple)。 在內部，Python已經拆解了元組， 並按順序分配了這些變量。 我們可以看到，如果我們向元組添加第四個項目， Python不知道如何拆解，所以我們有一個錯誤。 這是Python內置類型的概述。 在接下來的講課中，我們將簡要回顧一下字串， 然後開始使用一些數據檔案。