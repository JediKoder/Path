Sự thiếu vắng kiểu tĩnh trong python
không có nghĩa là không có nhiều loại. Ngôn ngữ python được xây dựng trong
hàm gọi kiểu mà sẽ hiển thị cho bạn kiểu tham chiếu là gì. Một số các loại phổ biến bao gồm các chuỗi,
không có kiểu như chúng ta đã thảo luận. Các biến số nguyên và các biến số thực động. Như chúng ta thấy bạn có thể có các
tham khảo với hàm cũng như một kiểu hàm cũng tồn tại. Các đối tượng đã được
nhập liên quan với chúng và các thuộc tính này có thể là
dữ liệu và các hàm. Rất nhiều python được xây dựng xung quanh
các loại trình tự hoặc các loại kiểu khác nhau. Và có ba loại sưu tập gốc
mà chúng ta sẽ nói đến bộ dữ liệu, danh sách và thư viện. Một bộ dữ liệu là một một
chuỗi các biến không thay đổi. Điều đó có nghĩa là một bộ dữ liệu có
các mục theo trình tự nhưng nó không thể bị thay đổi khi được tạo ra. Chúng ta viết các bộ dữ liệu sử dụng dấu ngoặc đơn,
chúng ta có thể kết hợp các loại nội dung của bộ dữ liệu. Đây là một bộ dữ liệu có bốn mục. Hai cái là số, hai cái là chuỗi. Lưu ý là tôi sẽ sử dụng dấu nháy đơn cho chuỗi, trong khi trước đây
tôi đã sử dụng dấu nháy kép. Trong python dấu nháy đơn hay kép có thể
được sử dụng để biểu thị giá trị chuỗi. Danh sách thì tương tự nhưng
chúng có thể thay đổi được vì thế bạn có thể thay đổi chiều dài của chúng,
số lượng các thành phần và các giá trị thành phần. Một danh sách được đưa ra
sử dụng dấu ngoặc vuông. Có một vài cách khác nhau để thay đổi
các nội dung của một danh sách. Thứ nhất là thông qua chức năng phụ
cho phép bạn thêm các mục mới vào cuối của danh sách. Cả danh sách và bộ dữ liệu là những kiểu lặp lại vì thế bạn có thể viết các vòng lặp để đi qua
mỗi giá trị chúng nắm giữ. Các chỉ tiêu, nếu bạn muốn tìm mỗi mục trong
danh sách để sử dụng cho một câu lệnh. Điều này tương tự với mỗi vòng lặp trong
các ngôn ngữ như là java và C# nhưng lưu ý rằng không có yêu cầu nhập. Danh sách và bộ dữ liệu cũng có thể được
truy cập như là các mảng trong các ngôn khác, bằng việc sử dụng dấu ngoặc vuông
được gọi là toán tử chỉ số. Mục đầu tiên của danh sách
bắt đầu ở điểm 0 và để lấy độ dài của danh sách, chúng ta
sử dụng hàm lan có sẵn. Có một số các hàm phổ biến
mà bạn mong đợi như min và max tìm thấy các giá trị nhỏ nhất và lớn nhất trong
danh sách hoặc bộ dữ liệu được đưa ra. Danh sách python và bộ dữ liệu có các phép toán học
cơ bản mà có thể được cho phép. Ví dụ dấu cộng để nối các danh sách. Và các dấu sao lặp lại
các giá trị của một danh sách. Một phép tính phổ biến là
phép tính in. Phép tính này xem xét quan hệ thành viên
và trả về giá trị boolean đúng hoặc sai phụ thuộc vào một mục có nằm
trong danh sách đưa ra hay không. Chúng ta sẽ đi vào các phép toán và các chuỗi đặc biệt trong tuần tới khi chúng ta nhìn vào
một kĩ thuật được gọi là broadcasting. Có lẽ phép tính thú vị nhất bạn
có thể làm với danh sách là cắt. Cú pháp xóa dấu ngoặc vuông để
truy cập một phần tử có thể thấy khá tương tự với cái bạn đã thấy
trong các ngôn ngữ khác. Trong python toán tử chỉ số
cho phép bạn truy cập nhiều giá trị. Tham số đầu tiên là vị trí bắt đầu, nếu đó là phần tử duy nhất thì
một phần tử sẽ được trả lại từ danh sách. Tham số thứ hai là phần cuối của phép cắt. Nó là kết thúc nếu bạn
cắt tham số đầu tiên là 0 tham số tiếp theo là 1, thì bạn chỉ nhận lại một phần tử. Điều này dễ giải thích hơn nhiều bằng một ví dụ. Một mặt tiện ích của python
là tất cả các chuỗi thực sự là các danh sách của các ký tự vì thế
việc cắt thực hiện dễ dàng trên chúng. Đây là một ví dụ. Khi chúng ta chạy x sub 0 hoặc x sub 0:1, chúng ta
nhận được ký tự đầu tiên của chuỗi. Nhưng khi chúng ta chạy x sub 0:2, chúng ta
nhận được hai ký tự đầu tiên của chuỗi. Các giá trị chỉ số của chúng ta có thể là âm. Và điều này có nghĩa là để chỉ ra phần sau của chuỗi. x[-1] là chữ cuối cùng của chuỗi, và x[-4:-2] đọc trong tất cả các ký tự từ vị trí cuối cùng
thứ 4 đến vị trí cuối cùng thứ 2. Cuối cùng nếu chúng ta muốn
tham chiếu sự bắt đầu hoặc kết thúc của chuỗi một cách ngầm định,
chúng ta có thể bỏ các tham số trống. x[:3] bắt đầu với ký tự đầu tiên cho tới vị trí thứ ba. Và x[3:] bắt đầu với ký tự thứ tư
bởi vì chỉ số luôn bắt đầu với 0 và đi tới cuối danh sách. Cắt là cốt lỗi của ngôn ngữ python và là một phần lớn của tính toán khoa học với python. Đặc biệt nếu bạn bắt đầu
thao tác với ma trận. Chúng ta sẽ nói về việc cắt
trong bài học tiếp theo. Nhưng đây là một câu hỏi
để giúp bạn bắt đầu. Bây giờ tôi đặt sang một bên
để nói về thao tác chuỗi. Cắt không phải cách duy nhất
để thao tác chuỗi. Và hoạt động phổ biến là để
tách chuỗi dựa trên các chuỗi con. Đó là đi qua các chuỗi tìm kiếm mẫu, và cắt từng đoạn cho thích hợp. Điều này được gọi là đánh giá thông thường và chúng ta sẽ tìm hiểu điều này chi tiết
trong phần đầu của chuỗi với văn bản khai thác bởi vì nó
là một phép toán phổ biến. Nhưng python có một số các công cụ
cơ bản cho phân tích văn bản. Và tôi sẽ cho bạn thấy chúng ở đây. Như chúng ta thấy các chuỗi là
các danh sách ký tự. Vì thế các phép toán bạn có thể làm trên
một danh sách, bạn có thể làm trên một chuỗi. Điều này có nghĩa là bạn có thể nối hai chuỗi
với nhau sử dụng toán tử plus. Và nhân chuỗi sẽ lặp lại một chuỗi cho trước. Bạn cũng có thể tìm kiếm chuỗi
sử dụng toán tử in. Kiểu chuỗi có một hàm
liên quan gọi là phân chia. Hàm này chia chuỗi thành các
chuỗi nhỏ dựa trên mẫu đơn giản. Đây là ví dụ, tôi sẽ chỉ chia tên đầy đủ của tôi theo ký tự cách. Kết quả là một danh sách của bốn phần tử. Chúng ta có thể lựa chọn phần tử đầu tiên với
phép toán chỉ số là tên đầu tiên, và phần tử cuối là tên cuối của tôi. Chúng ta sẽ sử dụng trên các chuỗi nhiều
một chút ngoại trừ trước khi chúng ta thực hiện, tôi muốn nói về các từ điển. Các từ điển tương tự như danh sách và
bộ dữ liệu trong đó chúng nắm giữ một tập các phần tử nhưng chúng là các bộ sưu tập
được dán nhãn cái mà không có trình tự. Điều này có nghĩa là với mỗi giá trị
bạn thêm vào trong từ điển, bạn phải đưa ra một
chìa khóa để lấy giá trị đó. Trong các ngôn ngữ khác cấu trúc
thường được gọi là bản đồ. Và trong python chúng ta sử dụng các
dấu ngoặc nhọn để biểu thị một từ điển. Đây là một ví dụ nơi chúng ta có
các tên liên kết với địa chỉ email. Bạn có thể thấy rằng chúng ta chỉ ra
mỗi phần tử của từ điển khi tạo ra nó sử dụng cặp giá trị được
chia ra bởi dấu hai chấm. Sau đó bạn có thể lấy lại một giá trị cho
một nhãn cho trước sử dụng toán tử chỉ số. Các kiểu bạn sử dụng cho các chỉ số hoặc
các giá trị trong từ điển có thể là bất kì cái gì. Và điều này có thể là sự kết hợp
của các kiểu nếu bạn thích. Chúng ta có thể thêm các phần tử mới vào
từ điển sử dụng cùng một toán tử chỉ số chúng ta đã từng sử dụng. Chỉ cần ở bên trái của câu lệnh. Bạn lặp lại tất cả các phần tử trong
từ điển theo một số cách. Đầu tiên bạn có thể lặp qua
tất cả các khóa và chỉ cần lấy ra nội dung
khi bạn thấy thích hợp. Hoặc bạn có thể lặp qua các
giá trị và bỏ các khóa. Cuối cùng bạn có thể lặp qua cả giá trị và khóa cùng lúc sử dụng hàm của phần tử. Ví dụ cuối cùng này có
một chút khác biệt và nó là một ví dụ về cái gì đó
được gọi là giải nén. Trong python bạn có thể có trình tự, đó
là danh sách hoặc bộ dữ liệu của các giá trị và bạn có thể giải nén các mục trong các
biến khác nhau qua các nhiệm vụ trong một câu lệnh. Đây là một ví dụ nữa về điều đó, nơi mà
chúng ta có một bộ dữ liệu có tên đầu của tôi, tên cuối của tôi và địa chỉ email của tôi. Tôi khai báo ba biến và gán chúng vào bộ dữ liệu. Bên dưới, python đã giải nén bộ dữ liệu và gán mỗi biến theo trình tự. Chúng ta có thể thấy điều đó nếu
chúng ta thêm phần tử thứ tư vào bộ dữ liệu, Python không chắc giải nén như thế nào,
vì thế chúng ta có một lỗi. Đó là tổng quan về việc xây dựng
trong các kiểu với python. Trong bài giảng tiếp theo chúng ta
sẽ nói lại về các chuỗi một cách ngắn gọn. sau đó bắt đầu làm việc với các tập dữ liệu.