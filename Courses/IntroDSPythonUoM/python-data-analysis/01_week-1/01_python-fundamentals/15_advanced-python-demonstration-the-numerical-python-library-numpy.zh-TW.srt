1
00:00:09,144 --> 00:00:10,550
大家好，

2
00:00:10,550 --> 00:00:14,170
今天，我們將學習Numpy，這是一個廣泛應用於數據科學界的軟體套件，

3
00:00:14,170 --> 00:00:18,200
它使我們能夠高效地工作在Python中的陣列(arrays)和矩陣(matrices)。

4
00:00:20,040 --> 00:00:22,710
首先，我們將Numpy導入為np。

5
00:00:24,200 --> 00:00:26,520
這讓我們使用快捷方式np來引用Numpy。

6
00:00:28,210 --> 00:00:30,070
我們可以先建立陣列

7
00:00:30,070 --> 00:00:32,830
我們可以先建立一個列表, 並
將其轉換為陣列。

8
00:00:34,270 --> 00:00:35,610
所以這是我們的第一個Numpy陣列。

9
00:00:37,270 --> 00:00:39,659
我們可以通過直接傳遞列表來更簡潔地做到這一點。

10
00:00:41,740 --> 00:00:44,870
現在讓我們通過傳遞列表列的表來創建多維陣列。

11
00:00:46,700 --> 00:00:51,130
我們通過了兩個列表，每個都有三個元素，我們得到一個2x3的陣列。

12
00:00:52,610 --> 00:00:55,020
我們可以使用shape屬性來檢查尺寸。

13
00:00:56,970 --> 00:01:01,232
對於arange函數，我們傳遞一個開始start，一個停止stop和一個跨步step的值，

14
00:01:01,232 --> 00:01:05,016
並在給定的間隔內返回均勻跨步的值。

15
00:01:07,086 --> 00:01:11,830
所以我們想把這個陣列轉換成一個3x5的陣列。

16
00:01:11,830 --> 00:01:13,100
我們可以使用reshape來做到這一點。

17
00:01:15,590 --> 00:01:20,170
linspace函數類似於arange，除了我們告訴

18
00:01:20,170 --> 00:01:23,920
我們需要返回多少個數字，它會相應地分隔間隔。

19
00:01:25,410 --> 00:01:28,480
我們可以使用resize來到位改變維度數(dimention)。

20
00:01:30,645 --> 00:01:34,300
Numpy還有幾個內置函數和快捷方式來創建陣列。

21
00:01:35,330 --> 00:01:41,720
ones返回一個都是1的陣列，
zeros是一個都是0的陣列。

22
00:01:41,720 --> 00:01:46,575
eye返回一個陣列，其中對角線是1，其他是0的，和

23
00:01:46,575 --> 00:01:49,170
diag構造一個對角陣列。

24
00:01:51,220 --> 00:01:56,510
要重複創建一個陣列，我們可以傳入一個重複的列表，或者

25
00:01:56,510 --> 00:01:59,240
我們可以使用Numpy的repeat函數。

26
00:01:59,240 --> 00:02:01,240
注意兩個輸出之間的差異。

27
00:02:03,590 --> 00:02:05,780
我們也可以組合陣列來創建新的陣列。

28
00:02:07,330 --> 00:02:12,280
讓我們創建一個都是1的2x3陣列，

29
00:02:12,280 --> 00:02:13,480
並將其自身垂直堆疊，乘以2.

30
00:02:13,480 --> 00:02:17,396
這裡是一樣的，但是水平堆疊。

31
00:02:20,207 --> 00:02:24,063
現在，我們來看看你可以用Numpy陣列做的一些運算

32
00:02:26,998 --> 00:02:30,958
執行逐元素的加法，減法，乘法和

33
00:02:30,958 --> 00:02:35,369
除法是直截了當的，相同的將陣列的所有數字提高一個乘冪(power)。

34
00:02:37,270 --> 00:02:39,260
對於那些熟悉線性代數，

35
00:02:39,260 --> 00:02:41,760
可以使用dot函數來完成dot product。

36
00:02:43,800 --> 00:02:48,250
我們來創建一個使用前一個陣列y及其平方值的新陣列。

37
00:02:49,910 --> 00:02:51,550
這個陣列的shape是2x3。

38
00:02:54,190 --> 00:02:58,510
我們也可以使用T方法來轉置陣列，

39
00:02:58,510 --> 00:03:00,060
該方法交換行和列。

40
00:03:01,380 --> 00:03:03,909
轉置的陣列的形狀(shape)是3x2。

41
00:03:06,346 --> 00:03:10,975
使用dtype，我們可以看到陣列具有什麼類型的數據，

42
00:03:10,975 --> 00:03:14,782
使用astype，將陣列轉換為不同的類型。

43
00:03:16,631 --> 00:03:21,330
Numpy還有許多我們可以使用的有用的數學功能

44
00:03:21,330 --> 00:03:22,820
我們來看幾個常用的。

45
00:03:24,670 --> 00:03:26,324
這是我們的新陣列a

46
00:03:30,427 --> 00:03:36,423
我們可以查看陣列中的值的總和(sum)，最大值(max)和

47
00:03:36,423 --> 00:03:41,353
最小值(min)，或

48
00:03:41,353 --> 00:03:44,255
平均值(mean)和標準偏差(std)。

49
00:03:46,606 --> 00:03:53,027
要找到最大或最小值的索引，我們可以使用argmax和argmin。

50
00:03:57,621 --> 00:04:00,240
接下來，我們來了解索引(index)和切片(slice)。

51
00:04:01,690 --> 00:04:05,470
讓我們創建一個陣列，0到12的平方.

52
00:04:05,470 --> 00:04:10,290
我們可以使用方括號表示法獲取特定索引的值，

53
00:04:10,290 --> 00:04:13,590
並用冒號(:)符號獲取範圍。

54
00:04:15,550 --> 00:04:18,790
冒號(:)符號是開始，結束，和跨步的數值。

55
00:04:20,410 --> 00:04:24,190
指定起始或結束索引不是必需的。

56
00:04:24,190 --> 00:04:28,836
而且我們也可以使用負數從陣列的末尾倒數。

57
00:04:28,836 --> 00:04:33,398
對於我們的第一個例子，我們來看看從索引1開始的範圍，

58
00:04:33,398 --> 00:04:35,090
並在索引5之前停止。

59
00:04:36,960 --> 00:04:40,540
接下來，我們來看一下陣列的最後四個元素

60
00:04:42,760 --> 00:04:47,400
而在這裡，我們從陣列的末尾開始第五，

61
00:04:47,400 --> 00:04:48,480
每步向後倒數二。

62
00:04:50,680 --> 00:04:52,787
我們來看看這是如何擴展到二維陣列的。

63
00:04:54,190 --> 00:04:58,825
首先，我們做一個二維陣列，0到35.

64
00:04:58,825 --> 00:05:02,720
我們可以使用逗號(,)表示法獲得一個特定的值。

65
00:05:02,720 --> 00:05:04,900
這是第二行(row)和第二列(column)的值。

66
00:05:06,990 --> 00:05:11,396
現在我們用冒號表示法來獲取第三行和第

67
00:05:11,396 --> 00:05:13,019
三到第六的列。

68
00:05:13,019 --> 00:05:16,336
我們也可以做一些事情，比如獲取前兩行和

69
00:05:16,336 --> 00:05:18,560
除最後一列之外的所有列。

70
00:05:20,350 --> 00:05:23,310
這是我們如何從最後一行中選擇每一個第二個元素。

71
00:05:25,180 --> 00:05:29,010
我們也可以使用方括號運算符進行條件索引和賦與值。

72
00:05:30,720 --> 00:05:35,106
例如，這將返回一個陣列，它是我們

73
00:05:35,106 --> 00:05:38,078
原始陣列的大於30的元素。

74
00:05:38,078 --> 00:05:41,824
這個賦值將把原來陣列中的元素

75
00:05:41,824 --> 00:05:43,200
分配給一個新的值。

76
00:05:44,580 --> 00:05:49,950
在這裡，我們將陣列中的元素的最大值上限到30

77
00:05:49,950 --> 00:05:55,040
接下來，我們來看看在Numpy中複製數據。

78
00:05:55,040 --> 00:05:59,540
首先，我們創建一個新的陣列r2，它是陣列r的一個切片。

79
00:06:01,040 --> 00:06:03,930
現在，我們把這個陣列的所有元素設置為零。

80
00:06:05,590 --> 00:06:07,820
當我們看原始陣列r時，

81
00:06:07,820 --> 00:06:10,770
我們可以看到r中的slice也被改變了。

82
00:06:13,010 --> 00:06:14,700
所以這是需要記住的，

83
00:06:14,700 --> 00:06:18,230
在使用Numpy陣列時要小心。

84
00:06:18,230 --> 00:06:22,660
如果我們希望創建副本，但不會更改原始陣列r，

85
00:06:22,660 --> 00:06:23,765
那麼我們可以使用r.copy()。

86
00:06:25,230 --> 00:06:30,144
我們可以看到，如果我們將r_copy中所有元素的值更改為10，

87
00:06:30,144 --> 00:06:32,879
則原始陣列r保持不變。

88
00:06:37,490 --> 00:06:41,470
最後，我們來學習如何迭代陣列。

89
00:06:41,470 --> 00:06:45,698
首先，我們創建一個4x3陣列，用從零到九的隨機(random)數字，。

90
00:06:49,523 --> 00:06:54,230
例如，我們可以通過在行(row)中輸入行進行迭代。

91
00:06:55,720 --> 00:06:59,860
我們可以迭代行索引，通過使用test的len函數進行，

92
00:06:59,860 --> 00:07:01,310
它(len)返回行數。

93
00:07:03,140 --> 00:07:06,719
我們可以通過使用enumerate結合這兩種迭代方式，

94
00:07:06,719 --> 00:07:09,360
這給我們行和行的索引。

95
00:07:16,103 --> 00:07:17,905
讓我們做一個新的陣列，test2。

96
00:07:19,920 --> 00:07:23,045
如果我們希望遍歷這兩個陣列，我們可以使用zip。

97
00:07:29,035 --> 00:07:30,900
Numpy有很多可以提供。

98
00:07:30,900 --> 00:07:34,680
所以一定要查看文檔來了解更多優秀的功能。

99
00:07:35,710 --> 00:07:36,980
謝謝加入我們。

100
00:07:36,980 --> 00:07:38,031
希望下次見到你。