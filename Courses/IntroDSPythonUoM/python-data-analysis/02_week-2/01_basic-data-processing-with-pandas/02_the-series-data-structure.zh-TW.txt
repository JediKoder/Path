系列(Series)是Pandas中的核心數據結構之一。 你可以想像一下相交於列表(list)和字典(dictionary)之間。 這些項目都按照順序儲存， 並且有標籤可以從中檢索。 一個簡單的方法去想象，它是兩列數據。 第一欄是特殊的索引，很像字典dictionary的key。 而第二欄則是你真實的數據。 重要的是注意資料欄位也有自己的標籤 可以透過 .name 來取得 這與dictionary不同， 在合併多列數據時很有用。 我們稍後再談談。 你可能會預期，可以透過傳遞一個 list 的值來新創一個 Series 當你這麼做時， Pandas 會自動從零開始分配索引 並將該series的名稱設置為“None”。 我們來看個例子 首先，我輸入pandas程式庫，將它設定為pd， 讓我們看一下 Series 物件 從文件中可以看出
你可以傳入一些資料 索引和名稱 資料可以是任何東西，類似陣列(array)，像list一樣。 讓我們來試一試。 我會用三個我喜歡的動物來建立串列 獅子，熊和麋鹿 我們看到這裡pandas自動的識別了類型 在list中包含的數據，在這裡我們傳入string列表， pandas將這類型設定為object。 我們不一定要使用strings。 如果我們傳入整數列表，例如， 可以看見Pandas設定類型為int64。 在Pandas內部儲存series的值，使用NumPy程式庫的類型陣列(typed array)。 在處理數據時這提供顯著的加速，比較於傳統 Python的list 還有一些其他有關類型的細節存在， 對於其性能的了解很重要。 最重要的是 NumPy 和 Pandas 如何處理遺失的資料 在Python中，我們有none type以表示資料缺失。 但是我們該怎麼做，如果我們想要有一個類型的list，像我們在 series object? 在內部，pandas會執行一些類型轉換。 如果我們創建一個list的strings，而我們有一個元素是None類型， pandas將它作為None，並使用object的類型在內部陣列。 如果我們創建一個數字，整數或浮點的列表，並放入None類型， Pandas會自動將其轉換為特殊浮點值，指定為NaN， 代表它不是一個數字。 對於那些沒有用過Python科學計算的人， 這是一個很重要的一點。 NaN不是None，當我們嘗試相等測試時，它是偽的 原來你還不能做Nan本身的相等測試。 當你這樣做時，答案總是錯誤的。 你需要使用特殊功能來測試 '不是一個數字'的存在，例如numpy程式庫中的isnan。 我們稍後將在作業中再回來這， 請記住，當你看到Nan，它意思類似于none，但 它是一個數值，它的區別對待是因為效率的原因。 讓我們來談談如何可以創造出pandas的series。 雖然我的動物列表可能是創建一些玩的數據的常用方法， 但通常你需標籤的數據來操作。 series可以從dictionary數據來創建。 如果這樣做，你提供的dictionary的keys將自動指派成索引(index) ，而不僅僅是遞增整數的index。 這裡有一個使用維基百科的官方全國運動的數據的例子。 當我們創建的series時，我們看到， 因為它是string數據，pandas將一系列的數據類型設置為object。 我們將國家列表設置為series的value， 並將index的value設置為我們的dictionary中的keys。 series創建完成後， 我們可以使用index屬性獲取index對象。 你也可以將index的創建與數據分離，通過 將index作為列表，明確地傳遞給series。 那麼如果index中的值列表 與dictionary中用於創建該系列的keys不對齊，會發生什麼？ 在這種情況下，pandas會覆蓋自動創建index值，僅只偏用 你提供的所有的index值。 它會忽略你的dictionary中所有的keys，當keys不在你的index中，而且 pandas將添加non類型或NaN值，在你提供的任何index值， 而不存在你的dictionary的key列表中。 在這個例子中，我們傳遞一個四個項目的dictionary， 由於index列表，只有兩個保留在series object。 我們看到曲棍球已被添加，但是由於它也在index列表中， 它沒有相關的值。 這就是我們如何創建series。 在下一課中，我們將深入研究如何從series中獲取數據。