如我們所見，列表(series)和DataFrames都可以應用索引(index)。 索引本質上是行(row)的標籤， 我們知道行對應於軸零(axis=0)。 在我們的奧運數據中，我們用國家的名稱對Dataframe進行索引。 指數可以被自動推斷，例如當我們創建新列表， 沒有指定索引時，在這種情況下，我們獲得數值索引; 或者可以明確設置， 比如當我們使用字典(dictionary)創建列表時; 或者當我們下載數據時從CSV文件時,指定標頭 另一個選項用來設置index是使用set_index函數。 此函數使用一個列(column)的名單，並將這些列提升為索引。 set_index是個破壞性過程，它不保留當前的索引。 如果要保留當前索引，則需要手動創建一個新的列， 並從index屬性將其複製到其中。 我們回到我們的奧運DataFrame。 假設我們不想按照國家來索引DataFrame， 而是要按夏季奧運中獲得的金牌數量進行來索引。 首先，我們需要將原來的國家索引保存到新的列('country')。 我們可以使用索引操作或具有列標籤的字串來執行此操作。 然後我們用set_index，使用夏季金牌獲得數量column，來設置新的索引。 你會看到，當我們從一個現有的列創建一個新的索引時，看起來 一個新的空行被添加在第一行。 這並不是像你看到的。 而我們知道這一點，部分原因是，一個空值實際上將被給予 none或NaN，如果列的數據類型是數值。 實際發生的是索引有一個名字。 無論列名是什麼，Jupyter筆記本會提供它 在輸出裡。 我們可以通過調用reset_index函數完全去除索引。 這提升原來的索引成一個列，並創建內定的編號索引。 Pandas的一個很好的功能是可以選擇進行多層次索引。 這與關連資料庫系統中的複合鍵類似。 要創建多層次索引，我們只需調用set_index， 給一個列的列表，包含我們有興趣提升為索引的。 Pandas將按順序搜索這些資料，找出不同的數據 並形成綜合索引指數。 我們經常可以發現很好的例子，在處理地理數據， 按區域或人口統計來分類的數據。 我們來改數據集，查看一些普查資料，以獲得更好的例子。 該數據存儲在文件census.csv中， 來自美國人口普查局。 尤其是尤其是 這是美國縣級人口數據的詳細細節。 這是一個很好的例子，說明不同類型的數據 可能的格式，當您嘗試清理數據集時。 例如，在這個數據集中有兩個總結級別， 一個包含整個國家的摘要數據。 一個包含每個州的摘要數據， 一個包含每個縣的摘要數據。 我經常發現我想看到給定列中所有獨特值的列表。 在這個DataFrame中，我們可以看到可能的獨特值在 SUMLEV，使用unique()函數在DataFrame。 這與SQL裡distinct運算符類似。 在這裡，我們可以執行unique()在這個DataFrame的SUMLEV， 看到只有兩個不同的值，即40和50. 讓我們除掉每一行州的摘要數據， 只保留縣級數據。 此外，基於許多不同的原因，這數據集是很有趣味的， 讓我們將減少我們將要查看的數據，僅包括總人口 估計和總出生次數。 我們可以這樣做，通過創建我們想要保留的列名稱的列表， 然後對這列表進行投入，並將生成的DataFrame分配給我們的df變量。 美國人口普查數據分析人口數據估計按照州和縣的方式。 我們可以載入數據並將索引設置為州和 縣的組合，並查看Pandas如何在DataFrame中處理它。 我們可以這樣做，通過創建列標籤的列表，我們想要用來 當索引的。 然後使用此列表，用set_index並酌情指定輸出變量。 我們在這裡看到我們有一個雙重索引，首先是州名， 然後是縣名。 一個直接的問題是我們如何查詢這個DataFrame。 例如，我們以前看到loc屬性 在DataFrame可以用多個參數。 它可以查詢行(row)和列(column)。 當您使用Multi-Index時， 您必須按照要查詢的級別順序提供參數。 在索引的內部，每列稱為一個級別， 最外面的列為級別零。 例如，如果我們想看到Washtenaw縣的人口結果， 我住的地方，那麼你要將用第一個參數為密歇根州Michigan。 你可能有興趣只比較兩個縣。 例如，我住的Washtenaw和覆蓋Detroit的Wayne縣。 為此，我們可以傳遞loc方法， 一個的元組(tuple)列表(list)，描述我們希望查詢的索引。 由於我們有一個Multi-Index的兩個值，州和縣， 我們需要提供每個元素兩個值，作為我們的過濾列表。 好的，這就是扼要的解釋層次索引。 他們是Pandas程式庫的一個特殊部分， 我認為可以使數據的管理和推理更容易。 當然，層次標籤不僅適用於行(row)。 例如，您可以轉置此矩陣，現在具有列(column)的層次標籤。 投影一個具有這些標籤的列， 正如您所期望的方式運行。