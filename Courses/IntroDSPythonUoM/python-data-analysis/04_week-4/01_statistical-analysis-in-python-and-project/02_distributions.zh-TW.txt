讓我們從討論分佈(distribution)開始吧。 我們從最常用的硬幣測試開始。 當一個硬幣翻轉時，它有一個落的頭部向上的可能性，和 一個落的尾巴向上的可能性。 如果我們翻轉硬幣多次，我們會收集一些數據，頭部和 尾巴向上的次數， 直覺地，我們知道我們得到頭部的次數 將相當於我們得到尾巴的次數，用一個公平的硬幣。 如果你翻了硬幣一百次， 你每次都得到頭部，你可能會懷疑這枚硬幣的公平性。 我們可以將這個硬幣的每次翻轉的結果作為隨機(random)變數來考慮。 當我們可以一起考慮所有可能的隨機變數的集合時， 我們稱之為一個分佈(distribution)。 在這種情況下，分佈被稱為二項式(binomial)， 因為有兩個可能的輸出，頭或尾。 這也是一個離散值(discreet)分佈的例子，因為只有 使用類別(category)，頭和尾，而不是實數。 Numpy 實際上有一些內建的分佈 讓我們可以隨機翻轉硬幣，用給定的參數。 讓我們試試看吧。 這裡我們從NumPy二項式(binomial)分佈中計算一個數字 我們有兩個參數要傳入： 第一個是我們希望運行的次數。 第二個是我們得到零的機會，
我們這裡將使用它來代表頭 我們來運行一輪這個模擬。 太好了， 所以如果你在Jupyter筆記本上跟著，
你可能會得到一個0或1 一半的人得到了一個與我所得到的值一樣的值。 如果我們運行模擬一千次， 將結果除以一千？ 那麼你看到的數字很接近0.5，這 意味著我們有一半的時間我們有一個頭，
有一半的時間，我們有一個尾巴。 當然，均勻加權(even weighted)二項式分佈只是一個簡單的例子。 我們也可以具有不均勻加權的二項式分佈。 例如，當我今天在拍攝時，有龍捲風的機會是什麼 即使我們這裡有龍捲風，機率也很低 也許有百分之幾的機率 我們可以把它放進二項式分佈的加權值在NumPy中 如果我們跑10萬次，我們看到有非常少的龍捲風事件。 你可能會想知道為什麼我說這麼簡單和 直觀的分佈。 我的意思是說，我們都明白翻轉硬幣， 作為孩子，當我們不得不做出重要決定的時候
。 但是我想顯示的是，計算工具開始允許 我們模擬世界的現象，有助於我們回答問題。 我可以告訴你們這個背後的數學， 我們可以計算出概率。 但是模擬本質上是另一種形式的查詢。 我們再來一個例子。 讓我們說，龍捲風在Ann Arbor發生的機會，在任何一天 是1％，不管一年中任何的時間 這比現實的高，但更快的演示。 讓我們說，如果有一個龍捲風，我要遠離窗戶並 躲避，然後第二天再回來做錄音 那麼連續兩天發生龍捲風的機率是甚麼？ 那麼我們可以使用NumPy中的二項式分佈來模擬這個 這裡我們創建一個空列表，我們創建一些潛在的龍捲風事件，通過 問NumPy二項式函數，和使用我們龍捲風的機率 我們會做這一百萬次，這只是稍微少於3000年的事件。 這個過程稱為分佈採樣(sampling)。 現在我們可以寫一個循環(loop)來經歷列表，找出 兩個相鄰的一對1，這意味著 持續兩天有龍捲風 我們看到，最終大概有102天的龍捲風事件(持續兩天)，在這3000年的時間里。 坦白說，對我來說還是太多了。 我的觀點是，現代計算能力使我們能夠非常 快速地模擬，不同的參數對分佈的影響。 導致一種新的理解問題的方式。 你不必解決所有的數學問題，你可以 很經常模擬問題，並觀察結果。 在接下來的講課中，我們將再談一下分佈。