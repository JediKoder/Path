1
00:00:09,315 --> 00:00:12,588
現在我們已經涵蓋了Pandas的許多機制，我想停下來

2
00:00:12,588 --> 00:00:15,590
談談資料類型(type)和尺度(scale)。

3
00:00:15,590 --> 00:00:19,140
我們已經看到Pandas支持許多不同的計算資料類型，

4
00:00:19,140 --> 00:00:22,510
如字串，整數和浮點數。

5
00:00:22,510 --> 00:00:25,120
這不能抓到我們所說的資料尺度

6
00:00:26,190 --> 00:00:27,930
假設我們有一個DataFrame的學生和

7
00:00:27,930 --> 00:00:31,010
他們的學校年級，如1年級，2年級和3年級。

8
00:00:31,010 --> 00:00:35,300
1年級的學生和2年級的學生有所不同，一樣的

9
00:00:35,300 --> 00:00:39,200
8年級和9年級的學生有所不同。

10
00:00:39,200 --> 00:00:41,630
讓我們考慮這些學生可能獲得的期末考試成績

11
00:00:41,630 --> 00:00:42,780
的作業。

12
00:00:42,780 --> 00:00:44,530
A和A-之間的差異與

13
00:00:44,530 --> 00:00:48,970
A-和B+之間的差值相同嗎？

14
00:00:48,970 --> 00:00:51,640
在密歇根大學，至少答案通常不是。

15
00:00:53,330 --> 00:00:55,870
我們直觀地看到了一些不同的尺度，

16
00:00:55,870 --> 00:00:59,170
當我們進行數據清理和統計分析和

17
00:00:59,170 --> 00:01:03,430
機器學習時，重要的是要澄清我們的知識和術語。

18
00:01:03,430 --> 00:01:06,330
作為一個數據科學家，有四個尺度，值得了解。

19
00:01:07,410 --> 00:01:08,785
第一個是比率(ratio)尺度。

20
00:01:08,785 --> 00:01:13,150
在比率尺度中，測量單位相等間隔，數學

21
00:01:13,150 --> 00:01:17,430
運算（如減法，除法和乘法）都是有效的。

22
00:01:17,430 --> 00:01:20,809
比率尺度測量的良好例子可能是高度和重量。

23
00:01:21,970 --> 00:01:23,880
下一個尺度是間隔(interval)尺度。

24
00:01:23,880 --> 00:01:26,620
在間隔尺度中，測量單元相等間隔。

25
00:01:26,620 --> 00:01:27,930
與比率尺度相同

26
00:01:27,930 --> 00:01:30,030
沒有明確的缺乏數值。。

27
00:01:30,030 --> 00:01:34,440
那就是沒有一個真正的零，所以運算如乘法和

28
00:01:34,440 --> 00:01:36,049
除法是無效的。

29
00:01:37,080 --> 00:01:40,860
間隔尺度的一個例子可能是測量的溫度，以攝氏或

30
00:01:40,860 --> 00:01:41,800
華氏的溫度。

31
00:01:41,800 --> 00:01:44,045
因為沒有沒有的溫度，

32
00:01:44,045 --> 00:01:46,650
0度是一個有意義的溫度值。

33
00:01:48,430 --> 00:01:52,810
羅盤的方向可能是另一個很好的例子，羅盤內的0度

34
00:01:52,810 --> 00:01:54,760
並不表示缺乏方向。

35
00:01:56,170 --> 00:01:58,850
對於在數據挖掘中所做的大部分工作，差異在

36
00:01:58,850 --> 00:02:01,830
比率和間隔尺度之間，可能不是那麼明顯或

37
00:02:01,830 --> 00:02:04,130
重要，比較於您所使用的算法。

38
00:02:04,130 --> 00:02:06,990
但重要的是在你的心中要清楚，當你應用在先進

39
00:02:06,990 --> 00:02:08,040
的統計測試時

40
00:02:09,340 --> 00:02:13,160
下一個尺度是序數(ordinal)尺度，這也很重要。

41
00:02:13,160 --> 00:02:16,270
在序數尺度上，值的順序是重要的，

42
00:02:16,270 --> 00:02:19,770
但是值之間的差異並不等間隔。

43
00:02:19,770 --> 00:02:23,260
這裡是密西根大學許多課程中使用的一個打成績分數
的方法，

44
00:02:23,260 --> 00:02:27,500
是一個很好的例子，其中字母成績被賦予了加減。

45
00:02:27,500 --> 00:02:31,570
但是，當您將此與百分比值進行比較時，您會看到只有字母本身

46
00:02:31,570 --> 00:02:35,270
涵蓋了4％的可用成績，而字母有加號或

47
00:02:35,270 --> 00:02:39,160
減號的通常只有可用成績的3％。

48
00:02:39,160 --> 00:02:42,250
基於此，那就是奇怪了，如果有同樣多的學生拿

49
00:02:42,250 --> 00:02:45,420
到A+或A-的，和那些拿到只是A的.

50
00:02:46,980 --> 00:02:49,430
有序數據在機器學習中非常普遍，

51
00:02:49,430 --> 00:02:52,320
有時候是一個挑戰。

52
00:02:52,320 --> 00:02:55,010
最後我會提到的尺度是名義(nominal)尺度

53
00:02:55,010 --> 00:02:57,450
往往只是被稱為分類(categorical)數據。

54
00:02:57,450 --> 00:03:00,500
這裡的體育隊的名稱可能是很好的例子。

55
00:03:00,500 --> 00:03:03,100
團隊的數目有限的,而改變他們的順序或

56
00:03:03,100 --> 00:03:05,179
將數學函數應用到他們是毫無意義的。

57
00:03:06,240 --> 00:03:10,600
分類值是很常見，我們通常指類別，

58
00:03:10,600 --> 00:03:13,240
那裡有只有兩個可能的值為二進制值。

59
00:03:15,280 --> 00:03:19,500
那麼為什麼我停止談論Pandas呢，並跳上這個尺度的討論。

60
00:03:19,500 --> 00:03:21,685
那麼，鑑於他們的重要性在統計學和

61
00:03:21,685 --> 00:03:24,555
機器學習中，Pandas有很多有趣的功能來

62
00:03:24,555 --> 00:03:27,735
處理測量尺度之間的轉換。

63
00:03:27,735 --> 00:03:32,057
我們先從名義(nominal)數據開始，在Pandas被稱為分類(category)數據。

64
00:03:32,057 --> 00:03:35,363
Pandas實際上具有內置類型的分類數據，您可以

65
00:03:35,363 --> 00:03:39,497
使用astype方法將數據列設置為分類數據。

66
00:03:39,497 --> 00:03:42,164
astype嘗試更改您的數據的底層類型，

67
00:03:42,164 --> 00:03:44,247
在這種情況下改到類別數據。

68
00:03:44,247 --> 00:03:48,117
您可以進一步將其更改為序數(ordinal)數據，通過將ordered標誌設置為

69
00:03:48,117 --> 00:03:51,900
true，並以有序的方式傳遞類別來。

70
00:03:51,900 --> 00:03:52,595
這裡有個例子，這裡有個例子，

71
00:03:52,595 --> 00:03:56,210
讓我們創建一個DataFrame按照降序的字母級別。

72
00:03:56,210 --> 00:03:59,490
我們還可以設定一些更粗略措施的索引值。

73
00:04:00,690 --> 00:04:04,630
現在當我們指示Pandas將其作為分類數據時，我們看到

74
00:04:04,630 --> 00:04:08,109
dtype已被設置為類別(category)，並且有11個不同的類別。

75
00:04:09,284 --> 00:04:12,520
如果我們想要向Pandas表明這資料是按邏輯順序，

76
00:04:12,520 --> 00:04:15,030
我們通過ordered=True設置標誌和

77
00:04:15,030 --> 00:04:19,430
我們看到這個數據反映在類別dtype中，使用小於(<)符號。

78
00:04:19,430 --> 00:04:20,860
你能用這個做什麼？

79
00:04:20,860 --> 00:04:25,160
那麼，序數(ordinal)數據有一個排序，所以它可以幫助你進行布林屏蔽(boolean mask)。

80
00:04:25,160 --> 00:04:28,540
例如，如果我們有我們的成績列表，我們將它們與C進行了比較。

81
00:04:28,540 --> 00:04:31,860
如果我們根據字典順序來作，那麼C+和

82
00:04:31,860 --> 00:04:33,980
C-都實際上大於C.

83
00:04:35,560 --> 00:04:38,600
與其將這些一個接一個編碼，本來是根據字典順序的

84
00:04:38,600 --> 00:04:42,500
，就像數字一樣，我們可以指出數據有明確的順序。

85
00:04:42,500 --> 00:04:45,690
然後廣播會如我們所預期的。

86
00:04:45,690 --> 00:04:49,120
然後，我們可以使用一組數學運算，如最小值，

87
00:04:49,120 --> 00:04:51,790
最大值和其他數學運算在序數(ordinal)數據。

88
00:04:53,090 --> 00:04:57,710
有時是有用的，因為每個分類都是列，去表示分類值，

89
00:04:57,710 --> 00:05:01,760
用true或false值，取決於是否適用於該類別。

90
00:05:01,760 --> 00:05:04,560
這在特徵(feature)提取(extraction)中特別常見，

91
00:05:04,560 --> 00:05:07,180
這是在專業化課程的第三個中的一個課題。

92
00:05:08,690 --> 00:05:12,700
變數用布林(boolean)值的通常稱為虛擬(dummy)變數。

93
00:05:12,700 --> 00:05:15,540
Pandas有一個內置的功能，稱為get_dummies，

94
00:05:15,540 --> 00:05:20,100
它將單個列的值轉換成多個列的0

95
00:05:20,100 --> 00:05:22,909
和1，表示虛擬變量的存在。

96
00:05:25,180 --> 00:05:28,048
還有一個尺度功能，我想談談的。

97
00:05:28,048 --> 00:05:30,680
那就是轉換一個在間隔尺度或

98
00:05:30,680 --> 00:05:36,560
比率尺度的值，像數字等級，到分類尺度，像一個字母級別一樣。

99
00:05:36,560 --> 00:05:39,900
現在，這似乎有點反直覺，由於您失去了

100
00:05:39,900 --> 00:05:41,910
有關該值的信息。

101
00:05:41,910 --> 00:05:43,956
但它在幾個地方很有用。

102
00:05:43,956 --> 00:05:47,550
首先，如果您可視化類別的頻率，

103
00:05:47,550 --> 00:05:50,100
這可能是一個非常有用的方法，

104
00:05:50,100 --> 00:05:54,620
而且直方圖(histogram)經常用於轉換了的間隔(interval)或比率(ratio)數據。

105
00:05:54,620 --> 00:05:58,660
我們將在這個專業化的第二個課程中看一下直方圖。

106
00:06:00,160 --> 00:06:04,570
其次，如果你使用機器學習分類方法處理數據，

107
00:06:04,570 --> 00:06:06,980
則你需要使用分類數據。

108
00:06:06,980 --> 00:06:09,735
所以降低維度(dimensionality)也是有用的。

109
00:06:09,735 --> 00:06:14,133
Pandas有一個名為cut的功能，它接受一個參數，這參數是一些像陣列結構

110
00:06:14,133 --> 00:06:17,237
像是一列或是
資料幀或是系列的結構

111
00:06:17,237 --> 00:06:22,420
它還需要使用多個箱子(bins)，並且所有箱子保持相等的間距。

112
00:06:22,420 --> 00:06:25,270
我們回到我們的人口普查數據的例子。

113
00:06:25,270 --> 00:06:26,920
我們看到我們可以按州分組，

114
00:06:26,920 --> 00:06:30,650
然後總匯到州的縣級平均人口名單。

115
00:06:30,650 --> 00:06:34,830
如果我們進一步用cut向這名單，用10個bins，我們可以看到，

116
00:06:34,830 --> 00:06:39,500
我們可以看到州列出了使用縣級平均人口的分類。

117
00:06:39,500 --> 00:06:44,000
在這裡，我們看到像Alabama州和Alaska州這樣的州屬於同一類別，

118
00:06:44,000 --> 00:06:48,410
而California州和District of Colombia同屬於一個非常不同的類別。

119
00:06:48,410 --> 00:06:51,350
現在，cut只是從數據中構建類別的一種方法，

120
00:06:51,350 --> 00:06:53,020
還有許多其他方法。

121
00:06:53,020 --> 00:06:54,932
例如，cut給你間隔(interval)數據，

122
00:06:54,932 --> 00:06:57,380
每個類別之間的間距大小相等。

123
00:06:57,380 --> 00:07:00,940
但有時你想根據頻率來形成分類。

124
00:07:00,940 --> 00:07:03,230
您希望每個倉(bin)中的物品數量相同，

125
00:07:03,230 --> 00:07:05,650
而不是倉之間的間距。

126
00:07:05,650 --> 00:07:07,480
它真的取決於你的數據的形式和

127
00:07:07,480 --> 00:07:08,740
你打算做什麼。

128
00:07:08,740 --> 00:07:11,760
我們將看一些例子在繪圖和製圖課程

129
00:07:11,760 --> 00:07:13,820
為那些註冊在專業化課的。

130
00:07:13,820 --> 00:07:16,880
這就是本模組的課程。

131
00:07:16,880 --> 00:07:20,060
還有一個程式的作業來測試你對本模組內容瞭解

132
00:07:20,060 --> 00:07:23,550
回頭見，在下一個課程為總結，在那裡我們將詳細討論

133
00:07:23,550 --> 00:07:26,910
關於統計和建立一些基本的分析結果比較。