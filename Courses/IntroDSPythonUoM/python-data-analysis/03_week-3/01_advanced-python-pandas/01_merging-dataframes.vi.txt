Tuần trước, chúng ta đã được giới thiệu dữ liệu thao tác panda và phân tích thư viện. Chúng ta thấy rằng có hai cấu trúc dữ liệu tương tự nhau, chuỗi đối tượng một chiều và đối tượng khung dữ liệu hai chiều. Truy vấn hai cấu trúc dữ liệu đã được hoàn thành theo các cách khác nhau, như là sử dụng iloc hoặc thuộc tính loc cho việc truy vấn hàng, hoặc sử dụng dấu ngoặc vuông trên đối tượng cho truy vấn cột. Quan trọng nhất chúng ta thấy rằng có thể truy vấn khung dữ liệu và các đối tượng chuỗi qua hàm bool. Và hàm bool là phương pháp lọc rất tốt cái mà cho phép chúng ta sử dụng phát sóng để xác định dữ liệu được giữ trong phân tích của chúng ta là gì. Trong bài giảng tuần này, chúng ta sẽ đi vào chi tiết làm thế nào để thao tác khung dữ liệu. Chúng ta sẽ khám phá cách giảm và xử lí dữ liệu sử dụng Groupby và Apply, cách tham gia bộ dữ liệu từ các tệp đồng thời. Chúng ta cũng sẽ nói về các tính năng mà hàm panda sử dụng cho cả phân tích thống kê truyền thống và học máy. Hãy bắt đầu với cách hợp nhất bộ dữ liệu. Chúng ta đã xem cách chúng ta thêm dữ liệu mới vào khung dữ liệu đang tồn tại. Chúng ta sử dụng dấu ngoặc vuông với tên cột mới, và dữ liệu được thêm vào miễn là chỉ số được chia sẻ. Nếu không có chỉ số chia sẻ và giá trị vô hướng được xuất, hãy nhớ giá trị vô hướng là một giá trị đơn như là một số nguyên hoặc một chuỗi. Cột giá trị mới được thêm vào với một giá trị vô hướng là giá trị mặc định. Nếu chúng ta muốn gán giá trị khác vào mỗi hàng thì sao? Nó có mẹo. Chúng ta có thể lập mã các giá trị trong danh sách, sau đó hàm panda sẽ giải nén chúng và gán chúng vào các hàng. Nhưng nếu danh sách chúng ta có không đủ dài, thì chúng ta không thể làm điều này, bởi vì hàm panda không biết nơi các giá trị mất đi sẽ đi. Đây là một ví dụ. Chúng ta đã sử dụng khung dữ liệu của việc mua bán từ các bài học trước, chỉ số là một danh sách của các cửa hàng và các cột là dữ liệu mua bán. Nếu chúng ta muốn thêm các cột mới là Date vào khung dữ liệu, ok. Chúng ta chỉ cần sử dụng dấu ngoặc vuông trực tiếp trên khung dữ liệu, miễn là cột dài bằng phần hồ sơ còn lại. Nếu chúng ta muốn thêm một số lĩnh vực mới, có thể là một dấu hiệu chuyển, điều đó rất dễ bởi vì nó là một giá trị vô hướng. Vấn đề đến khi chúng ta chỉ cố một vài mục để thêm. Để cái này hoạt động, chúng ta phải cung cấp hàm danh sách cái mà đủ dài cho khung dữ liệu để mỗi hàng có thể được quy hoạch. Điều này có nghĩa là chúng ta phải có đầu vào không có giá trị. Nếu mỗi hàng có chỉ số duy nhất, thì chúng ta có thể gán định dạng cột mới với chuỗi. Ví dụ nếu chúng ta đặt lại chỉ số trong ví dụ này để khung dữ liệu được dán nhãn từ 1 tới 2, thì chúng ta tạo ra một chuỗi mới với các nhãn mác, chúng ta có thể áp dụng nó. Các kết quả chúng ta có như chúng ta mong muốn. Mặt tốt của tiếp cận này là chúng ta có thể bỏ các mục mà chúng ta không biết, và hàm panda sẽ đặt các giá trị bỏ lỡ cho chúng ta. Đây là cách tốt để làm nó. Phổ biến hơn nữa chúng ta muốn tham gia vào hai khung dữ liệu lớn hơn và nó hơ phức tạp hơn một chút. Trước khi chúng ta nhảy vào mã, chúng ta cần phải giải quyết lí thuyết liên quan và có một số ngôn ngữ dưới đây. Đây là sơ đồ Venn. Sơ đồ venn được sử dụng để chỉ ra tập thành viên. Ví dụ vòng tròn bên trái là số sinh viên ở trường đại học. Vòng tròn bên phải là số nhân viên ở trường đại học. Và vùng chồng chéo ở giữa là tất cả các sinh viên và nhân viên. Có thể sinh viên là hướng dẫn cho khóa học hoặc các bài tập ở lớp, hoặc tham gia hoạt động nghiên cứu. Chúng ta có thể nghĩ về hai quần thể như các chỉ mục trong khung dữ liệu riêng biệt, có thể với nhãn mác của tên người. Khi chúng ta muốn tham gia cùng khung dữ liệu, chúng ta có một số lựa chọn để thực hiện. Đầu tiên cái mà chúng ta muốn là một danh sách tất cả mọi người bất kể họ là nhân viên hay sinh viên và tất cả thông tin chúng ta có thể có. Trong dữ liệu thuật ngữ, đó là một bộ đầy đủ. Và theo lí thuyết nó được gọi là một tập hợp. Trong sơ đồ Venn nó thể hiện mọi người trong vòng tròn bất kì. Mặc dù có thể là chúng ta chỉ muốn những người có thông tin nhiều nhất, mọi người cả nhân viên và sinh viên. Trong dữ liệu thuật ngữ đây được gọi là tham gia bên trong. Hoặc tập lí thuyết, ngã tư. Điều này được thể hiện trong sơ đồ venn như các phần trùng nhau của mỗi vòng. OK hãy xem một ví dụ về cách chúng ta sẽ làm điều này trong hàm panda, nơi chúng ta sẽ sử dụng chức năng. Đầu tiên chúng ta tạo ra hai khung dữ liệu, nhân viên và sinh viên. Có sự chồng chéo trong khung dữ liệu, Jame và Sally là sinh viên và nhân viên nhưng Mike và Kelly thì không phải. Quan trọng cả khung dữ liệu được chỉ dọc theo giá trị chúng ta muốn hợp nhất chúng, nó được gọi là tên. Nếu chúng ta muốn thống nhất chúng, chúng ta sẽ hợp nhất khung dữ liệu bên trai và khung dữ liệu bên phải và chúng ta muốn sử dụng outer. Chúng ta muốn sử dụng các chỉ mục bên trái và bên phải như các cột tham gia. Chúng ta thấy trong khung dữ liệu kết quả mà mọi người liệt kê. Và bởi vì Mike không có vai trò và John không có trường, các phần được liệt kê là mất giá trị. Nếu chúng ta muốn có giao điểm, những sinh viên người mà cũng là nhân viên chúng ta có thể tạo thuộc tính bên trong như thế nào. Và chúng ta có khung dữ liệu kết quả chỉ có Jame và Sally trong đó. Bây giờ có hai trường hợp phổ biến khi hợp nhất khung dữ liệu. Cả hai là ví dụ về cái chúng ta sẽ bổ sung. Đầu tiên là khi chúng ta muốn có một danh sách tất cả nhân viên bất kể họ là sinh viên hay không. Nhưng nếu họ là sinh viên chúng ta muốn có chi tiết của họ. Để làm điều này chúng ta sẽ sử dụng tham gia bên trái. Chúng ta sẽ có thể đoán tiếp theo là gì. Chúng ta muốn một danh sách tất cả các sinh viên và các vai trò nếu họ cũng là nhân viên. Để làm điều này chúng ta sẽ làm là tham gia bên phải. Phương pháp kết hợp có một cặp các thông số thú vị khác. Đầu tiên bạn không cần phải sử dụng chỉ số, bạn có thể sử dụng các cột. Đây là một ví dụ. Điều gì xảy ra khi chúng ta có sự xung đột giữa khung dữ liệu? Hãy xem xét cách tạo ra khung dữ liệu nhân viên mới và sinh viên mới có vị trí thông tin được thêm vào chúng. Trong khung dữ liệu nhân viên, đó là một vị trí nơi mà chúng ta có thể tìm ra người nhân viên. Và chúng ta có thể thấy giám đốc nhân sự ở trên State Street, trong khi cả hai sinh viên ở trên Washington Avenue. Nhưng đối với khung dữ liệu sinh viên, thông tin vị trí là địa chỉ nhà của họ. Chức năng kết hợp giữu thông tin này, nhưng gắn thêm một _x hoặc _y để giúp phân biệt sự khác nhau giữa chỉ số đi với cột dữ liệu. _x luôn là thông tin khung dữ liệu bên trái và _y luôn là thông tin khung dữ liệu bên phải. Bạn có thể kiểm soát tên của _x và _y với các thông số bổ sung nếu bạn muốn. Bây giờ bạn thử nó. Đây là khung dữ liệu của các sản phẩm và hóa đơn. Sản phẩm có thông tin nhận dạng và một giá nhãn dán. Hóa đơn liệt kê mọi người, sản phẩm, định danh và số lượng. Giả sử chúng ta muốn tổng hợp tất cả, cách chúng ta tham gia hai khung dữ liệu cùng lúc để chúng ta có danh sách của tất cả các thông tin chúng ta cần như thế nào? Trước khi chúng a bỏ việc sát nhập khung dữ liệu, hãy nói về đa chỉ mục và các cột. Có thể là tên đầu tiên các sinh viên và nhân viên chồng chéo nhưng tên cuối thì không. Trong trường hợp này chungst a sử dụng danh sách các cột nên được sử dụng để tham gia vào các thông số left_on và right_on. Như bạn thấy ở đây Jame Wilde và jame Hammond không phù hợp với cả hai. Tham gia vào trong không bao gồm các cá nhân trong đầu ra và chỉ Sally Brook được giữ lại. Đó là nó để sát nhập của khung dữ liệu. Hàm panda có nhiều lựa chọn nhưng tôi nghĩ chức năng kết hợp có lẽ là dễ dàng nhất để hiểu và linh hoạt nhất. Trong phần tiếp theo chúng ta sẽ nói về cách viết hàm panda và nghiên cứu kĩ hơn về các chức năng nâng cao cho việc thao tác khung dữ liệu.