在这个视频中 我将展示 一个机器学习的例子 它是一种非常简单的神经网络 它将学着识别数字 并且你能够从中观察到权值的演变过程， 从我们运行的非常简单的学习算法中。 所以，我们我们来看非常 训练一个非常简单的用于识别手写形状的网络的学习算法。 网络有两层神经元。 它有输入神经单元。 它们的激励表示每个像素的强度。输出神经单元的回应表示 类别。 我们想要的是，当我们输入 特定的形状时，该形状的输出单元会被激活 如果一个像素是活跃的，它要做的 是给特定的形状投票。 即这些形状包含这个像素。 每个有墨水的像素可以给多个形状投票。 每个投票可以有不同的强度，得到最多票的形状获胜。 所以我们假设 在输出单元之间有竞争。 另外，一些我现在没有解释的内容 将在接下来的课程中解释。 所以首先，我们需要决定如何显示权重。 非常自然地，我们可以把权重写在 输入和输出单元的连接上。但是， 我们需要显示成千上万个权重值。 所以，想法是对于每个输出单元做个映射。在映射中，我们显示 每个位置上的输入像素的连接强度 我们用黑色和白色的斑点来表示连接的强度。这些斑点的区域代表幅值。 他们的颜色代表正负。那么，你现在看到的初始权重只是一些小的随机值。 现在我们要做的是给这个网络一些数据
让它学习到比随机权重更好的权值 我们采取的方法是：给它一个图像 然后增加从这个图像中活动的像素到正确的分类的权重 如果只是做加法 权重只能变大最终导致每个分类 无论我们给网络什么图像
它都将得到巨大的输入 所以我们需要想办法控制权值 我们要做的是减小从活跃像素到任何网络猜测的分类的权重 减小从活跃像素到任何网络猜测的分类的权重 所以我们确实在训练它做正确的事
而不是现在看到的有趋向于做正确的事 如果它的确在做正确的事 
那么我们在学习规则的第一步所增加的权重 将恰好抵消这个减法 于是什么事也没有发生
这正是我们想要的 所以 这是初始权值 
现在我们将给这个网络几百个训练数据 然后再来看这些权重 现在 权重已经变了 他们开始形成有规律的模式  现在再给它几百个训练数据 权值有一些小的改变 接着再来几百个 再几百个  再几百个 现在权值已经基本上达到其终值了 我将在后面的课时中讨论更多的细节 但是你可以看到现在的权重看起来就像这些形状的模板 如果你看看数字 1 对应的单位  他们并不像识别 1 的小模板
他们并不完全是模板 如果你看看数字 9 对应的单元的权重 他们在下半部分没有正的权重 那是因为为了区别 9 和 7
下班部分并没有被用到 你必须通过判断上半部分是一个圈还是一道横杠来区分它们 所以 那些输出单元重点在于区分 关于这个学习算法的一点是
这个网络太简单 它并不是很好的区分形状的算法 它所学到的东西相当于每个形状的迷你模板 然后判断哪个形状模板与输入的图形中墨迹
重叠最多 哪个图型就是胜出者 问题是手写的数字在权重上的变化太复杂
简单的模板并不能用于识别所有形状 你必须为数字建立允许变异的模型：
首先进行特征提取 然后再看这些特征的排列 这里是我们刚刚提到的例子 观察绿色方框内的这些数字2 你会发现找不到一种模板 既能够很好地匹配这些数字2 又不会错误地匹配到红色方框内的数字3 所以这个任务不能被这样一个简单的神经网络轻易解决 这个神经网络尽其所能也仍旧无法胜任这个任务