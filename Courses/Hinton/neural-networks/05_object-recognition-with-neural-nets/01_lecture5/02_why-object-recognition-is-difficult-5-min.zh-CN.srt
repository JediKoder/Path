1
00:00:00,000 --> 00:00:05,778
在这段视频中，我将介绍为什么计算机在
真实场景中识别物体是一件很困难的事情

2
00:00:05,778 --> 00:00:11,128
这对我们人类来说轻而易举

3
00:00:11,128 --> 00:00:16,834
所以我们很难意识到这有多困难

4
00:00:16,834 --> 00:00:22,470
这需要我们将一大堆用来表示像素强度的
数据处理成物体的标签

5
00:00:22,470 --> 00:00:26,689
这里边包括了各种各样的困难
我们需要将物体分割出来

6
00:00:26,689 --> 00:00:30,226
我们需要处理光线、观察点的变化

7
00:00:30,226 --> 00:00:34,693
我们需要处理物体的定义 这非常复杂

8
00:00:34,693 --> 00:00:37,858
还有一种可能性

9
00:00:37,858 --> 00:00:42,760
从图像中识别物体需要大量的知识

10
00:00:42,760 --> 00:00:47,476
甚至包括图像分割、处理光线观察点等低级的过程

11
00:00:47,476 --> 00:00:52,502
这样的话 手工设计能够很好地识别物体
的程序非常困难

12
00:00:52,502 --> 00:00:58,274
存在许多原因 导致了从图像中识别物体如此困难

13
00:00:58,274 --> 00:01:04,366
首先 很难将一个物体与图像中的其他物体分割开来

14
00:01:04,366 --> 00:01:09,515
在现实世界中 我们四处移动 所以我们拥有运动感知

15
00:01:09,515 --> 00:01:13,330
此外我们有两只眼睛 所以我们拥有立体感知

16
00:01:13,330 --> 00:01:16,000
这些你无法在静止的图像中得到

17
00:01:16,000 --> 00:01:21,022
所以 很难判断图像中的哪些部分属于同一个物体

18
00:01:21,022 --> 00:01:25,853
除此之外 一个物体的部分可能被其他物体所遮挡

19
00:01:25,853 --> 00:01:30,494
所以 你常常无法看到物体的全貌
你的视觉如此发达 以至于常常不会注意到这一点

20
00:01:30,494 --> 00:01:35,159
另一个使得识别物体如此困难的原因是

21
00:01:35,159 --> 00:01:40,620
一个像素点的强度同时取决于光线

22
00:01:40,620 --> 00:01:43,761
和它自身的属性

23
00:01:43,761 --> 00:01:49,154
举个例子 一个强光照射下的黑色表面和

24
00:01:49,154 --> 00:01:52,500
一个弱光下的白色表面具有相同的像素强度

25
00:01:53,480 --> 00:01:58,551
要记住 识别一个物体就是
将一堆像素点的强度值

26
00:01:58,551 --> 00:02:01,620
转换为一个物体种类的标签

27
00:02:02,160 --> 00:02:07,457
这些像素强度值会出于各种各样的原因变化

28
00:02:07,457 --> 00:02:12,053
这些原因往往与物体的自身属性无关
换句话说 与这个物体本身无关

29
00:02:12,053 --> 00:02:16,089
物体会发生各种不同形式的变形

30
00:02:16,089 --> 00:02:19,186
所以 相当简单的东西 比如手写数字

31
00:02:19,186 --> 00:02:25,159
叫着同一个名字 却有着截然不同的形状

32
00:02:25,159 --> 00:02:28,404
一个数字 2 可以是意大利体的

33
00:02:28,404 --> 00:02:34,525
转折处是一个尖端而非圆圈

34
00:02:34,525 --> 00:02:42,420
它也可以有一个非常大而圆的圈

35
00:02:42,420 --> 00:02:49,206
很多种物体都是这样
物体的类别往往不是由外形来定义

36
00:02:49,206 --> 00:02:51,849
不妨考虑椅子

37
00:02:51,849 --> 00:02:58,899
有不少东西都叫做椅子
从老式扶手椅到休闲沙发

38
00:02:58,899 --> 00:03:05,914
从钢结构实木靠背的现代椅
到任何你可以坐上去的东西

39
00:03:05,914 --> 00:03:11,663
另一个使得识别物体如此困难的原因
是观察点的不同

40
00:03:11,663 --> 00:03:17,105
识别一个三维物体的观察点可以在很大范围内变化

41
00:03:17,105 --> 00:03:23,717
观察点的改变引起了图像的改变

42
00:03:23,717 --> 00:03:29,120
这使得标准机器学习算法难以处理

43
00:03:29,960 --> 00:03:34,590
问题在于 信息在输入维度之间跳来跳去

44
00:03:34,590 --> 00:03:39,156
设想一个典型情形 输入维数同像素点相对应

45
00:03:39,156 --> 00:03:43,980
如果一个现实世界中的物体在移动
而你的眼睛没有移动以跟住它

46
00:03:43,980 --> 00:03:47,839
那么这个物体的信息会出现在不同的像素点上

47
00:03:47,839 --> 00:03:52,920
这与我们在机器学习中处理的一般问题不同

48
00:03:53,320 --> 00:03:58,128
为了强调这一点 假设我们有一个医疗数据库

49
00:03:58,128 --> 00:04:02,816
一个输入是病人的年龄 另一个输入是病人的体重

50
00:04:02,816 --> 00:04:07,385
下面开始进行机器学习 我们发现

51
00:04:07,385 --> 00:04:11,352
一些编码器更改了输入到属性的编码关系

52
00:04:11,352 --> 00:04:16,100
即对于编码器中的一个
他们在应该放年龄的地方放了体重

53
00:04:16,100 --> 00:04:18,925
他们在应该放体重的地方放了年龄

54
00:04:18,925 --> 00:04:22,231
显然 我们不能再继续我们的机器学习了

55
00:04:22,231 --> 00:04:26,980
我们应当尝试着修复这个问题 它会搞砸整个事情

56
00:04:26,980 --> 00:04:31,704
我把这个现象叫做维度跳跃
信息从一个输入维度跳跃到了另一个

57
00:04:31,704 --> 00:04:35,352
这正是观察点变化所做的 也正是需要我们解决的

58
00:04:35,352 --> 00:04:39,239
我们更希望以一系统化的方式解决这个问题

59
00:04:39,239 --> 00:04:40,136
翻译 Haozhe Zhu